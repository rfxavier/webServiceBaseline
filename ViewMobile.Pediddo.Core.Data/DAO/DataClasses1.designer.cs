#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViewMobile.Pediddo.Core.Data.DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lanovitadb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdvice(Advice instance);
    partial void UpdateAdvice(Advice instance);
    partial void DeleteAdvice(Advice instance);
    partial void InsertUnitMeasure(UnitMeasure instance);
    partial void UpdateUnitMeasure(UnitMeasure instance);
    partial void DeleteUnitMeasure(UnitMeasure instance);
    partial void InsertAdviceButton(AdviceButton instance);
    partial void UpdateAdviceButton(AdviceButton instance);
    partial void DeleteAdviceButton(AdviceButton instance);
    partial void InsertApp(App instance);
    partial void UpdateApp(App instance);
    partial void DeleteApp(App instance);
    partial void InsertAppImage(AppImage instance);
    partial void UpdateAppImage(AppImage instance);
    partial void DeleteAppImage(AppImage instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertBuyer(Buyer instance);
    partial void UpdateBuyer(Buyer instance);
    partial void DeleteBuyer(Buyer instance);
    partial void InsertBuyerAdviceLog(BuyerAdviceLog instance);
    partial void UpdateBuyerAdviceLog(BuyerAdviceLog instance);
    partial void DeleteBuyerAdviceLog(BuyerAdviceLog instance);
    partial void InsertBuyerDevice(BuyerDevice instance);
    partial void UpdateBuyerDevice(BuyerDevice instance);
    partial void DeleteBuyerDevice(BuyerDevice instance);
    partial void InsertBuyerPromotion(BuyerPromotion instance);
    partial void UpdateBuyerPromotion(BuyerPromotion instance);
    partial void DeleteBuyerPromotion(BuyerPromotion instance);
    partial void InsertBuyerSeller(BuyerSeller instance);
    partial void UpdateBuyerSeller(BuyerSeller instance);
    partial void DeleteBuyerSeller(BuyerSeller instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCodeLink(CodeLink instance);
    partial void UpdateCodeLink(CodeLink instance);
    partial void DeleteCodeLink(CodeLink instance);
    partial void InsertContentSharing(ContentSharing instance);
    partial void UpdateContentSharing(ContentSharing instance);
    partial void DeleteContentSharing(ContentSharing instance);
    partial void InsertContentSharingLog(ContentSharingLog instance);
    partial void UpdateContentSharingLog(ContentSharingLog instance);
    partial void DeleteContentSharingLog(ContentSharingLog instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCreditPurchase(CreditPurchase instance);
    partial void UpdateCreditPurchase(CreditPurchase instance);
    partial void DeleteCreditPurchase(CreditPurchase instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerLocation(CustomerLocation instance);
    partial void UpdateCustomerLocation(CustomerLocation instance);
    partial void DeleteCustomerLocation(CustomerLocation instance);
    partial void InsertCustomerResponse(CustomerResponse instance);
    partial void UpdateCustomerResponse(CustomerResponse instance);
    partial void DeleteCustomerResponse(CustomerResponse instance);
    partial void InsertCustomerReVisit(CustomerReVisit instance);
    partial void UpdateCustomerReVisit(CustomerReVisit instance);
    partial void DeleteCustomerReVisit(CustomerReVisit instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertCustomerTypeCategory(CustomerTypeCategory instance);
    partial void UpdateCustomerTypeCategory(CustomerTypeCategory instance);
    partial void DeleteCustomerTypeCategory(CustomerTypeCategory instance);
    partial void InsertCustomerVisit(CustomerVisit instance);
    partial void UpdateCustomerVisit(CustomerVisit instance);
    partial void DeleteCustomerVisit(CustomerVisit instance);
    partial void InsertCustomerVisitProduct(CustomerVisitProduct instance);
    partial void UpdateCustomerVisitProduct(CustomerVisitProduct instance);
    partial void DeleteCustomerVisitProduct(CustomerVisitProduct instance);
    partial void InsertDealer(Dealer instance);
    partial void UpdateDealer(Dealer instance);
    partial void DeleteDealer(Dealer instance);
    partial void InsertDevice(Device instance);
    partial void UpdateDevice(Device instance);
    partial void DeleteDevice(Device instance);
    partial void InsertEmailNotification(EmailNotification instance);
    partial void UpdateEmailNotification(EmailNotification instance);
    partial void DeleteEmailNotification(EmailNotification instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeAdvice(EmployeeAdvice instance);
    partial void UpdateEmployeeAdvice(EmployeeAdvice instance);
    partial void DeleteEmployeeAdvice(EmployeeAdvice instance);
    partial void InsertEmployeeAdviceButton(EmployeeAdviceButton instance);
    partial void UpdateEmployeeAdviceButton(EmployeeAdviceButton instance);
    partial void DeleteEmployeeAdviceButton(EmployeeAdviceButton instance);
    partial void InsertEmployeeAdviceLog(EmployeeAdviceLog instance);
    partial void UpdateEmployeeAdviceLog(EmployeeAdviceLog instance);
    partial void DeleteEmployeeAdviceLog(EmployeeAdviceLog instance);
    partial void InsertEmployeeDevice(EmployeeDevice instance);
    partial void UpdateEmployeeDevice(EmployeeDevice instance);
    partial void DeleteEmployeeDevice(EmployeeDevice instance);
    partial void InsertMagnitude(Magnitude instance);
    partial void UpdateMagnitude(Magnitude instance);
    partial void DeleteMagnitude(Magnitude instance);
    partial void InsertMeter(Meter instance);
    partial void UpdateMeter(Meter instance);
    partial void DeleteMeter(Meter instance);
    partial void InsertMeterCategory(MeterCategory instance);
    partial void UpdateMeterCategory(MeterCategory instance);
    partial void DeleteMeterCategory(MeterCategory instance);
    partial void InsertMeterCategoryProduct(MeterCategoryProduct instance);
    partial void UpdateMeterCategoryProduct(MeterCategoryProduct instance);
    partial void DeleteMeterCategoryProduct(MeterCategoryProduct instance);
    partial void InsertMyOrder(MyOrder instance);
    partial void UpdateMyOrder(MyOrder instance);
    partial void DeleteMyOrder(MyOrder instance);
    partial void InsertMyOrderHistory(MyOrderHistory instance);
    partial void UpdateMyOrderHistory(MyOrderHistory instance);
    partial void DeleteMyOrderHistory(MyOrderHistory instance);
    partial void InsertMyOrderProduct(MyOrderProduct instance);
    partial void UpdateMyOrderProduct(MyOrderProduct instance);
    partial void DeleteMyOrderProduct(MyOrderProduct instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertPriceList(PriceList instance);
    partial void UpdatePriceList(PriceList instance);
    partial void DeletePriceList(PriceList instance);
    partial void InsertPriceListDetail(PriceListDetail instance);
    partial void UpdatePriceListDetail(PriceListDetail instance);
    partial void DeletePriceListDetail(PriceListDetail instance);
    partial void InsertPrintInvoice(PrintInvoice instance);
    partial void UpdatePrintInvoice(PrintInvoice instance);
    partial void DeletePrintInvoice(PrintInvoice instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertPromotionReading(PromotionReading instance);
    partial void UpdatePromotionReading(PromotionReading instance);
    partial void DeletePromotionReading(PromotionReading instance);
    partial void InsertSegment(Segment instance);
    partial void UpdateSegment(Segment instance);
    partial void DeleteSegment(Segment instance);
    partial void InsertSeller(Seller instance);
    partial void UpdateSeller(Seller instance);
    partial void DeleteSeller(Seller instance);
    partial void InsertSellerDevice(SellerDevice instance);
    partial void UpdateSellerDevice(SellerDevice instance);
    partial void DeleteSellerDevice(SellerDevice instance);
    partial void InsertSellerTrackPoint(SellerTrackPoint instance);
    partial void UpdateSellerTrackPoint(SellerTrackPoint instance);
    partial void DeleteSellerTrackPoint(SellerTrackPoint instance);
    partial void InsertSellerWorkingDay(SellerWorkingDay instance);
    partial void UpdateSellerWorkingDay(SellerWorkingDay instance);
    partial void DeleteSellerWorkingDay(SellerWorkingDay instance);
    partial void InsertShippingCostRule(ShippingCostRule instance);
    partial void UpdateShippingCostRule(ShippingCostRule instance);
    partial void DeleteShippingCostRule(ShippingCostRule instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTrackPoint(TrackPoint instance);
    partial void UpdateTrackPoint(TrackPoint instance);
    partial void DeleteTrackPoint(TrackPoint instance);
    partial void InsertTrackPointType(TrackPointType instance);
    partial void UpdateTrackPointType(TrackPointType instance);
    partial void DeleteTrackPointType(TrackPointType instance);
    partial void InsertVersion(Version instance);
    partial void UpdateVersion(Version instance);
    partial void DeleteVersion(Version instance);
    partial void InsertSupplierRecommendation(SupplierRecommendation instance);
    partial void UpdateSupplierRecommendation(SupplierRecommendation instance);
    partial void DeleteSupplierRecommendation(SupplierRecommendation instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ViewMobile.Pediddo.Core.Data.Properties.Settings.Default.cangoruadbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Advice> Advices
		{
			get
			{
				return this.GetTable<Advice>();
			}
		}
		
		public System.Data.Linq.Table<UnitMeasure> UnitMeasures
		{
			get
			{
				return this.GetTable<UnitMeasure>();
			}
		}
		
		public System.Data.Linq.Table<AdviceButton> AdviceButtons
		{
			get
			{
				return this.GetTable<AdviceButton>();
			}
		}
		
		public System.Data.Linq.Table<App> Apps
		{
			get
			{
				return this.GetTable<App>();
			}
		}
		
		public System.Data.Linq.Table<AppImage> AppImages
		{
			get
			{
				return this.GetTable<AppImage>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Buyer> Buyers
		{
			get
			{
				return this.GetTable<Buyer>();
			}
		}
		
		public System.Data.Linq.Table<BuyerAdviceLog> BuyerAdviceLogs
		{
			get
			{
				return this.GetTable<BuyerAdviceLog>();
			}
		}
		
		public System.Data.Linq.Table<BuyerDevice> BuyerDevices
		{
			get
			{
				return this.GetTable<BuyerDevice>();
			}
		}
		
		public System.Data.Linq.Table<BuyerPromotion> BuyerPromotions
		{
			get
			{
				return this.GetTable<BuyerPromotion>();
			}
		}
		
		public System.Data.Linq.Table<BuyerSeller> BuyerSellers
		{
			get
			{
				return this.GetTable<BuyerSeller>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<CodeLink> CodeLinks
		{
			get
			{
				return this.GetTable<CodeLink>();
			}
		}
		
		public System.Data.Linq.Table<ContentSharing> ContentSharings
		{
			get
			{
				return this.GetTable<ContentSharing>();
			}
		}
		
		public System.Data.Linq.Table<ContentSharingLog> ContentSharingLogs
		{
			get
			{
				return this.GetTable<ContentSharingLog>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CreditPurchase> CreditPurchases
		{
			get
			{
				return this.GetTable<CreditPurchase>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLocation> CustomerLocations
		{
			get
			{
				return this.GetTable<CustomerLocation>();
			}
		}
		
		public System.Data.Linq.Table<CustomerResponse> CustomerResponses
		{
			get
			{
				return this.GetTable<CustomerResponse>();
			}
		}
		
		public System.Data.Linq.Table<CustomerReVisit> CustomerReVisits
		{
			get
			{
				return this.GetTable<CustomerReVisit>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<CustomerTypeCategory> CustomerTypeCategories
		{
			get
			{
				return this.GetTable<CustomerTypeCategory>();
			}
		}
		
		public System.Data.Linq.Table<CustomerVisit> CustomerVisits
		{
			get
			{
				return this.GetTable<CustomerVisit>();
			}
		}
		
		public System.Data.Linq.Table<CustomerVisitProduct> CustomerVisitProducts
		{
			get
			{
				return this.GetTable<CustomerVisitProduct>();
			}
		}
		
		public System.Data.Linq.Table<Dealer> Dealers
		{
			get
			{
				return this.GetTable<Dealer>();
			}
		}
		
		public System.Data.Linq.Table<Device> Devices
		{
			get
			{
				return this.GetTable<Device>();
			}
		}
		
		public System.Data.Linq.Table<EmailNotification> EmailNotifications
		{
			get
			{
				return this.GetTable<EmailNotification>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAdvice> EmployeeAdvices
		{
			get
			{
				return this.GetTable<EmployeeAdvice>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAdviceButton> EmployeeAdviceButtons
		{
			get
			{
				return this.GetTable<EmployeeAdviceButton>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAdviceLog> EmployeeAdviceLogs
		{
			get
			{
				return this.GetTable<EmployeeAdviceLog>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDevice> EmployeeDevices
		{
			get
			{
				return this.GetTable<EmployeeDevice>();
			}
		}
		
		public System.Data.Linq.Table<Magnitude> Magnitudes
		{
			get
			{
				return this.GetTable<Magnitude>();
			}
		}
		
		public System.Data.Linq.Table<Meter> Meters
		{
			get
			{
				return this.GetTable<Meter>();
			}
		}
		
		public System.Data.Linq.Table<MeterCategory> MeterCategories
		{
			get
			{
				return this.GetTable<MeterCategory>();
			}
		}
		
		public System.Data.Linq.Table<MeterCategoryProduct> MeterCategoryProducts
		{
			get
			{
				return this.GetTable<MeterCategoryProduct>();
			}
		}
		
		public System.Data.Linq.Table<MyOrder> MyOrders
		{
			get
			{
				return this.GetTable<MyOrder>();
			}
		}
		
		public System.Data.Linq.Table<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this.GetTable<MyOrderHistory>();
			}
		}
		
		public System.Data.Linq.Table<MyOrderProduct> MyOrderProducts
		{
			get
			{
				return this.GetTable<MyOrderProduct>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<PriceList> PriceLists
		{
			get
			{
				return this.GetTable<PriceList>();
			}
		}
		
		public System.Data.Linq.Table<PriceListDetail> PriceListDetails
		{
			get
			{
				return this.GetTable<PriceListDetail>();
			}
		}
		
		public System.Data.Linq.Table<PrintInvoice> PrintInvoices
		{
			get
			{
				return this.GetTable<PrintInvoice>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<PromotionReading> PromotionReadings
		{
			get
			{
				return this.GetTable<PromotionReading>();
			}
		}
		
		public System.Data.Linq.Table<Segment> Segments
		{
			get
			{
				return this.GetTable<Segment>();
			}
		}
		
		public System.Data.Linq.Table<Seller> Sellers
		{
			get
			{
				return this.GetTable<Seller>();
			}
		}
		
		public System.Data.Linq.Table<SellerDevice> SellerDevices
		{
			get
			{
				return this.GetTable<SellerDevice>();
			}
		}
		
		public System.Data.Linq.Table<SellerTrackPoint> SellerTrackPoints
		{
			get
			{
				return this.GetTable<SellerTrackPoint>();
			}
		}
		
		public System.Data.Linq.Table<SellerWorkingDay> SellerWorkingDays
		{
			get
			{
				return this.GetTable<SellerWorkingDay>();
			}
		}
		
		public System.Data.Linq.Table<ShippingCostRule> ShippingCostRules
		{
			get
			{
				return this.GetTable<ShippingCostRule>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<TrackPoint> TrackPoints
		{
			get
			{
				return this.GetTable<TrackPoint>();
			}
		}
		
		public System.Data.Linq.Table<TrackPointType> TrackPointTypes
		{
			get
			{
				return this.GetTable<TrackPointType>();
			}
		}
		
		public System.Data.Linq.Table<Version> Versions
		{
			get
			{
				return this.GetTable<Version>();
			}
		}
		
		public System.Data.Linq.Table<SupplierRecommendation> SupplierRecommendations
		{
			get
			{
				return this.GetTable<SupplierRecommendation>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLastSellerLocation")]
		public ISingleResult<spLastSellerLocationResult> spLastSellerLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fecha", DbType="DateTime")] System.Nullable<System.DateTime> fecha)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fecha);
			return ((ISingleResult<spLastSellerLocationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spListTodayTravelPoint")]
		public ISingleResult<spListTodayTravelPointResult> spListTodayTravelPoint([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SellerID", DbType="Int")] System.Nullable<int> sellerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fecha", DbType="DateTime")] System.Nullable<System.DateTime> fecha)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sellerID, fecha);
			return ((ISingleResult<spListTodayTravelPointResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLastSellerAlive")]
		public ISingleResult<spLastSellerAliveResult> spLastSellerAlive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fecha", DbType="DateTime")] System.Nullable<System.DateTime> fecha)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fecha);
			return ((ISingleResult<spLastSellerAliveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAdminOrderList")]
		public ISingleResult<spAdminOrderListResult> spAdminOrderList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierID", DbType="Int")] System.Nullable<int> supplierID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerID", DbType="Int")] System.Nullable<int> dealerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string statusList, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string orderTypeList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateIni", DbType="DateTime")] System.Nullable<System.DateTime> dateIni, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFin", DbType="DateTime")] System.Nullable<System.DateTime> dateFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page", DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierID, dealerID, statusList, orderTypeList, dateIni, dateFin, page);
			return ((ISingleResult<spAdminOrderListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDealerOrderList")]
		public ISingleResult<spDealerOrderListResult> spDealerOrderList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerID", DbType="Int")] System.Nullable<int> dealerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string statusList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateIni", DbType="DateTime")] System.Nullable<System.DateTime> dateIni, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFin", DbType="DateTime")] System.Nullable<System.DateTime> dateFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page", DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dealerID, statusList, dateIni, dateFin, page);
			return ((ISingleResult<spDealerOrderListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSellerOrderList")]
		public ISingleResult<spSellerOrderListResult> spSellerOrderList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierID", DbType="Int")] System.Nullable<int> supplierID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SellerID", DbType="Int")] System.Nullable<int> sellerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string statusList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderTypeList", DbType="VarChar(50)")] string orderTypeList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeliveryDate", DbType="DateTime")] System.Nullable<System.DateTime> deliveryDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Page", DbType="Int")] System.Nullable<int> page)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierID, sellerID, statusList, orderTypeList, deliveryDate, page);
			return ((ISingleResult<spSellerOrderListResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advice")]
	public partial class Advice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdviceId;
		
		private bool _IsPublic;
		
		private System.Nullable<int> _BuyerID;
		
		private System.Nullable<bool> _Vip;
		
		private System.Nullable<decimal> _Credit;
		
		private string _Title;
		
		private string _Call;
		
		private string _Body;
		
		private System.Nullable<int> _AppImageId;
		
		private string _PictureName;
		
		private string _Argument;
		
		private System.Nullable<bool> _Highlight;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<AdviceButton> _AdviceButtons;
		
		private EntitySet<BuyerAdviceLog> _BuyerAdviceLogs;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<Buyer> _Buyer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdviceIdChanging(int value);
    partial void OnAdviceIdChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnVipChanging(System.Nullable<bool> value);
    partial void OnVipChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCallChanging(string value);
    partial void OnCallChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnAppImageIdChanging(System.Nullable<int> value);
    partial void OnAppImageIdChanged();
    partial void OnPictureNameChanging(string value);
    partial void OnPictureNameChanged();
    partial void OnArgumentChanging(string value);
    partial void OnArgumentChanged();
    partial void OnHighlightChanging(System.Nullable<bool> value);
    partial void OnHighlightChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Advice()
		{
			this._AdviceButtons = new EntitySet<AdviceButton>(new Action<AdviceButton>(this.attach_AdviceButtons), new Action<AdviceButton>(this.detach_AdviceButtons));
			this._BuyerAdviceLogs = new EntitySet<BuyerAdviceLog>(new Action<BuyerAdviceLog>(this.attach_BuyerAdviceLogs), new Action<BuyerAdviceLog>(this.detach_BuyerAdviceLogs));
			this._AppImage = default(EntityRef<AppImage>);
			this._Buyer = default(EntityRef<Buyer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdviceId
		{
			get
			{
				return this._AdviceId;
			}
			set
			{
				if ((this._AdviceId != value))
				{
					this.OnAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._AdviceId = value;
					this.SendPropertyChanged("AdviceId");
					this.OnAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Bit")]
		public System.Nullable<bool> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Call
		{
			get
			{
				return this._Call;
			}
			set
			{
				if ((this._Call != value))
				{
					this.OnCallChanging(value);
					this.SendPropertyChanging();
					this._Call = value;
					this.SendPropertyChanged("Call");
					this.OnCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageId", DbType="Int")]
		public System.Nullable<int> AppImageId
		{
			get
			{
				return this._AppImageId;
			}
			set
			{
				if ((this._AppImageId != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._AppImageId = value;
					this.SendPropertyChanged("AppImageId");
					this.OnAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureName", DbType="VarChar(200)")]
		public string PictureName
		{
			get
			{
				return this._PictureName;
			}
			set
			{
				if ((this._PictureName != value))
				{
					this.OnPictureNameChanging(value);
					this.SendPropertyChanging();
					this._PictureName = value;
					this.SendPropertyChanged("PictureName");
					this.OnPictureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Argument", DbType="VarChar(50)")]
		public string Argument
		{
			get
			{
				return this._Argument;
			}
			set
			{
				if ((this._Argument != value))
				{
					this.OnArgumentChanging(value);
					this.SendPropertyChanging();
					this._Argument = value;
					this.SendPropertyChanged("Argument");
					this.OnArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Highlight", DbType="Bit")]
		public System.Nullable<bool> Highlight
		{
			get
			{
				return this._Highlight;
			}
			set
			{
				if ((this._Highlight != value))
				{
					this.OnHighlightChanging(value);
					this.SendPropertyChanging();
					this._Highlight = value;
					this.SendPropertyChanged("Highlight");
					this.OnHighlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advice_AdviceButton", Storage="_AdviceButtons", ThisKey="AdviceId", OtherKey="AdviceId")]
		public EntitySet<AdviceButton> AdviceButtons
		{
			get
			{
				return this._AdviceButtons;
			}
			set
			{
				this._AdviceButtons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advice_BuyerAdviceLog", Storage="_BuyerAdviceLogs", ThisKey="AdviceId", OtherKey="AdviceId")]
		public EntitySet<BuyerAdviceLog> BuyerAdviceLogs
		{
			get
			{
				return this._BuyerAdviceLogs;
			}
			set
			{
				this._BuyerAdviceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Advice", Storage="_AppImage", ThisKey="AppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.Advices.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.Advices.Add(this);
						this._AppImageId = value.AppImageID;
					}
					else
					{
						this._AppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Advice", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.Advices.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.Advices.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdviceButtons(AdviceButton entity)
		{
			this.SendPropertyChanging();
			entity.Advice = this;
		}
		
		private void detach_AdviceButtons(AdviceButton entity)
		{
			this.SendPropertyChanging();
			entity.Advice = null;
		}
		
		private void attach_BuyerAdviceLogs(BuyerAdviceLog entity)
		{
			this.SendPropertyChanging();
			entity.Advice = this;
		}
		
		private void detach_BuyerAdviceLogs(BuyerAdviceLog entity)
		{
			this.SendPropertyChanging();
			entity.Advice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitMeasure")]
	public partial class UnitMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitMeasureId;
		
		private System.Nullable<int> _MagnitudeId;
		
		private string _Symbol;
		
		private string _Name;
		
		private System.Nullable<int> _UnitMeasureBaseId;
		
		private System.Nullable<double> _Factor;
		
		private bool _IsCustom;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Magnitude> _Magnitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitMeasureIdChanging(int value);
    partial void OnUnitMeasureIdChanged();
    partial void OnMagnitudeIdChanging(System.Nullable<int> value);
    partial void OnMagnitudeIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitMeasureBaseIdChanging(System.Nullable<int> value);
    partial void OnUnitMeasureBaseIdChanged();
    partial void OnFactorChanging(System.Nullable<double> value);
    partial void OnFactorChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public UnitMeasure()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Magnitude = default(EntityRef<Magnitude>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UnitMeasureId
		{
			get
			{
				return this._UnitMeasureId;
			}
			set
			{
				if ((this._UnitMeasureId != value))
				{
					this.OnUnitMeasureIdChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureId = value;
					this.SendPropertyChanged("UnitMeasureId");
					this.OnUnitMeasureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagnitudeId", DbType="Int")]
		public System.Nullable<int> MagnitudeId
		{
			get
			{
				return this._MagnitudeId;
			}
			set
			{
				if ((this._MagnitudeId != value))
				{
					if (this._Magnitude.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagnitudeIdChanging(value);
					this.SendPropertyChanging();
					this._MagnitudeId = value;
					this.SendPropertyChanged("MagnitudeId");
					this.OnMagnitudeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(5)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureBaseId", DbType="Int")]
		public System.Nullable<int> UnitMeasureBaseId
		{
			get
			{
				return this._UnitMeasureBaseId;
			}
			set
			{
				if ((this._UnitMeasureBaseId != value))
				{
					this.OnUnitMeasureBaseIdChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureBaseId = value;
					this.SendPropertyChanged("UnitMeasureBaseId");
					this.OnUnitMeasureBaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Float")]
		public System.Nullable<double> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product", Storage="_Products", ThisKey="UnitMeasureId", OtherKey="UnitMeasureId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magnitude_UnitMeasure", Storage="_Magnitude", ThisKey="MagnitudeId", OtherKey="MagnitudeId", IsForeignKey=true)]
		public Magnitude Magnitude
		{
			get
			{
				return this._Magnitude.Entity;
			}
			set
			{
				Magnitude previousValue = this._Magnitude.Entity;
				if (((previousValue != value) 
							|| (this._Magnitude.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magnitude.Entity = null;
						previousValue.UnitMeasures.Remove(this);
					}
					this._Magnitude.Entity = value;
					if ((value != null))
					{
						value.UnitMeasures.Add(this);
						this._MagnitudeId = value.MagnitudeId;
					}
					else
					{
						this._MagnitudeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Magnitude");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdviceButton")]
	public partial class AdviceButton : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdviceId;
		
		private int _ButtonId;
		
		private string _Text;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Advice> _Advice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdviceIdChanging(int value);
    partial void OnAdviceIdChanged();
    partial void OnButtonIdChanging(int value);
    partial void OnButtonIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public AdviceButton()
		{
			this._Advice = default(EntityRef<Advice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdviceId
		{
			get
			{
				return this._AdviceId;
			}
			set
			{
				if ((this._AdviceId != value))
				{
					if (this._Advice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._AdviceId = value;
					this.SendPropertyChanged("AdviceId");
					this.OnAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ButtonId
		{
			get
			{
				return this._ButtonId;
			}
			set
			{
				if ((this._ButtonId != value))
				{
					this.OnButtonIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonId = value;
					this.SendPropertyChanged("ButtonId");
					this.OnButtonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(50)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advice_AdviceButton", Storage="_Advice", ThisKey="AdviceId", OtherKey="AdviceId", IsForeignKey=true)]
		public Advice Advice
		{
			get
			{
				return this._Advice.Entity;
			}
			set
			{
				Advice previousValue = this._Advice.Entity;
				if (((previousValue != value) 
							|| (this._Advice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advice.Entity = null;
						previousValue.AdviceButtons.Remove(this);
					}
					this._Advice.Entity = value;
					if ((value != null))
					{
						value.AdviceButtons.Add(this);
						this._AdviceId = value.AdviceId;
					}
					else
					{
						this._AdviceId = default(int);
					}
					this.SendPropertyChanged("Advice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.App")]
	public partial class App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppID;
		
		private string _Name;
		
		private string _NotificationConnectionString;
		
		private string _NotificationHubName;
		
		private int _LastVersion;
		
		private System.DateTime _DateLastVersion;
		
		private EntitySet<Notification> _Notifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotificationConnectionStringChanging(string value);
    partial void OnNotificationConnectionStringChanged();
    partial void OnNotificationHubNameChanging(string value);
    partial void OnNotificationHubNameChanged();
    partial void OnLastVersionChanging(int value);
    partial void OnLastVersionChanged();
    partial void OnDateLastVersionChanging(System.DateTime value);
    partial void OnDateLastVersionChanged();
    #endregion
		
		public App()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationConnectionString", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string NotificationConnectionString
		{
			get
			{
				return this._NotificationConnectionString;
			}
			set
			{
				if ((this._NotificationConnectionString != value))
				{
					this.OnNotificationConnectionStringChanging(value);
					this.SendPropertyChanging();
					this._NotificationConnectionString = value;
					this.SendPropertyChanged("NotificationConnectionString");
					this.OnNotificationConnectionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationHubName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NotificationHubName
		{
			get
			{
				return this._NotificationHubName;
			}
			set
			{
				if ((this._NotificationHubName != value))
				{
					this.OnNotificationHubNameChanging(value);
					this.SendPropertyChanging();
					this._NotificationHubName = value;
					this.SendPropertyChanged("NotificationHubName");
					this.OnNotificationHubNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVersion", DbType="Int NOT NULL")]
		public int LastVersion
		{
			get
			{
				return this._LastVersion;
			}
			set
			{
				if ((this._LastVersion != value))
				{
					this.OnLastVersionChanging(value);
					this.SendPropertyChanging();
					this._LastVersion = value;
					this.SendPropertyChanged("LastVersion");
					this.OnLastVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastVersion", DbType="DateTime NOT NULL")]
		public System.DateTime DateLastVersion
		{
			get
			{
				return this._DateLastVersion;
			}
			set
			{
				if ((this._DateLastVersion != value))
				{
					this.OnDateLastVersionChanging(value);
					this.SendPropertyChanging();
					this._DateLastVersion = value;
					this.SendPropertyChanged("DateLastVersion");
					this.OnDateLastVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="App_Notification", Storage="_Notifications", ThisKey="AppID", OtherKey="AppID")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.App = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.App = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppImage")]
	public partial class AppImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppImageID;
		
		private string _ImageName;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<Advice> _Advices;
		
		private EntitySet<Banner> _Banners;
		
		private EntitySet<Buyer> _Buyers;
		
		private EntitySet<ContentSharing> _ContentSharings;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Customer> _Customers1;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
		private EntitySet<CustomerVisit> _CustomerVisits;
		
		private EntitySet<EmployeeAdvice> _EmployeeAdvices;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppImageIDChanging(int value);
    partial void OnAppImageIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public AppImage()
		{
			this._Advices = new EntitySet<Advice>(new Action<Advice>(this.attach_Advices), new Action<Advice>(this.detach_Advices));
			this._Banners = new EntitySet<Banner>(new Action<Banner>(this.attach_Banners), new Action<Banner>(this.detach_Banners));
			this._Buyers = new EntitySet<Buyer>(new Action<Buyer>(this.attach_Buyers), new Action<Buyer>(this.detach_Buyers));
			this._ContentSharings = new EntitySet<ContentSharing>(new Action<ContentSharing>(this.attach_ContentSharings), new Action<ContentSharing>(this.detach_ContentSharings));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Customers1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers1), new Action<Customer>(this.detach_Customers1));
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			this._CustomerVisits = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisits), new Action<CustomerVisit>(this.detach_CustomerVisits));
			this._EmployeeAdvices = new EntitySet<EmployeeAdvice>(new Action<EmployeeAdvice>(this.attach_EmployeeAdvices), new Action<EmployeeAdvice>(this.detach_EmployeeAdvices));
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Advice", Storage="_Advices", ThisKey="AppImageID", OtherKey="AppImageId")]
		public EntitySet<Advice> Advices
		{
			get
			{
				return this._Advices;
			}
			set
			{
				this._Advices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Banner", Storage="_Banners", ThisKey="AppImageID", OtherKey="AppImageID")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Buyer", Storage="_Buyers", ThisKey="AppImageID", OtherKey="AppImageId")]
		public EntitySet<Buyer> Buyers
		{
			get
			{
				return this._Buyers;
			}
			set
			{
				this._Buyers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_ContentSharing", Storage="_ContentSharings", ThisKey="AppImageID", OtherKey="AppImageID")]
		public EntitySet<ContentSharing> ContentSharings
		{
			get
			{
				return this._ContentSharings;
			}
			set
			{
				this._ContentSharings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Customer", Storage="_Customers", ThisKey="AppImageID", OtherKey="AppImageId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Customer1", Storage="_Customers1", ThisKey="AppImageID", OtherKey="ThumbAppImageId")]
		public EntitySet<Customer> Customers1
		{
			get
			{
				return this._Customers1;
			}
			set
			{
				this._Customers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_CustomerLocation", Storage="_CustomerLocations", ThisKey="AppImageID", OtherKey="AppImageID")]
		public EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_CustomerVisit", Storage="_CustomerVisits", ThisKey="AppImageID", OtherKey="AppImageId")]
		public EntitySet<CustomerVisit> CustomerVisits
		{
			get
			{
				return this._CustomerVisits;
			}
			set
			{
				this._CustomerVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_EmployeeAdvice", Storage="_EmployeeAdvices", ThisKey="AppImageID", OtherKey="AppImageId")]
		public EntitySet<EmployeeAdvice> EmployeeAdvices
		{
			get
			{
				return this._EmployeeAdvices;
			}
			set
			{
				this._EmployeeAdvices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="AppImageID", OtherKey="AppImageID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Product", Storage="_Products", ThisKey="AppImageID", OtherKey="AppImageID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Product1", Storage="_Products1", ThisKey="AppImageID", OtherKey="ThumbAppImageID")]
		public EntitySet<Product> Products1
		{
			get
			{
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Advices(Advice entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_Advices(Advice entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_ContentSharings(ContentSharing entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_ContentSharings(ContentSharing entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage1 = this;
		}
		
		private void detach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.AppImage1 = null;
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_EmployeeAdvices(EmployeeAdvice entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_EmployeeAdvices(EmployeeAdvice entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.AppImage = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.AppImage1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.AppImage1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerID;
		
		private int _Type;
		
		private bool _BannerActive;
		
		private int _AppImageID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<AppImage> _AppImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerIDChanging(int value);
    partial void OnBannerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnBannerActiveChanging(bool value);
    partial void OnBannerActiveChanged();
    partial void OnAppImageIDChanging(int value);
    partial void OnAppImageIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Banner()
		{
			this._AppImage = default(EntityRef<AppImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerID
		{
			get
			{
				return this._BannerID;
			}
			set
			{
				if ((this._BannerID != value))
				{
					this.OnBannerIDChanging(value);
					this.SendPropertyChanging();
					this._BannerID = value;
					this.SendPropertyChanged("BannerID");
					this.OnBannerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerActive", DbType="Bit NOT NULL")]
		public bool BannerActive
		{
			get
			{
				return this._BannerActive;
			}
			set
			{
				if ((this._BannerActive != value))
				{
					this.OnBannerActiveChanging(value);
					this.SendPropertyChanging();
					this._BannerActive = value;
					this.SendPropertyChanged("BannerActive");
					this.OnBannerActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int NOT NULL")]
		public int AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Banner", Storage="_AppImage", ThisKey="AppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._AppImageID = value.AppImageID;
					}
					else
					{
						this._AppImageID = default(int);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buyer")]
	public partial class Buyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyerID;
		
		private System.Nullable<int> _CustomerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DocumentNumber;
		
		private string _Email;
		
		private string _Password;
		
		private string _PhoneNumber;
		
		private string _SerialKey;
		
		private System.Nullable<bool> _IsBlocked;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<int> _AppImageId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Advice> _Advices;
		
		private EntitySet<BuyerDevice> _BuyerDevices;
		
		private EntitySet<BuyerPromotion> _BuyerPromotions;
		
		private EntitySet<BuyerSeller> _BuyerSellers;
		
		private EntitySet<ContentSharingLog> _ContentSharingLogs;
		
		private EntitySet<MyOrder> _MyOrders;
		
		private EntitySet<Notification> _Notifications;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnSerialKeyChanging(string value);
    partial void OnSerialKeyChanged();
    partial void OnIsBlockedChanging(System.Nullable<bool> value);
    partial void OnIsBlockedChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    partial void OnAppImageIdChanging(System.Nullable<int> value);
    partial void OnAppImageIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Buyer()
		{
			this._Advices = new EntitySet<Advice>(new Action<Advice>(this.attach_Advices), new Action<Advice>(this.detach_Advices));
			this._BuyerDevices = new EntitySet<BuyerDevice>(new Action<BuyerDevice>(this.attach_BuyerDevices), new Action<BuyerDevice>(this.detach_BuyerDevices));
			this._BuyerPromotions = new EntitySet<BuyerPromotion>(new Action<BuyerPromotion>(this.attach_BuyerPromotions), new Action<BuyerPromotion>(this.detach_BuyerPromotions));
			this._BuyerSellers = new EntitySet<BuyerSeller>(new Action<BuyerSeller>(this.attach_BuyerSellers), new Action<BuyerSeller>(this.detach_BuyerSellers));
			this._ContentSharingLogs = new EntitySet<ContentSharingLog>(new Action<ContentSharingLog>(this.attach_ContentSharingLogs), new Action<ContentSharingLog>(this.detach_ContentSharingLogs));
			this._MyOrders = new EntitySet<MyOrder>(new Action<MyOrder>(this.attach_MyOrders), new Action<MyOrder>(this.detach_MyOrders));
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._AppImage = default(EntityRef<AppImage>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialKey", DbType="VarChar(150)")]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit")]
		public System.Nullable<bool> IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageId", DbType="Int")]
		public System.Nullable<int> AppImageId
		{
			get
			{
				return this._AppImageId;
			}
			set
			{
				if ((this._AppImageId != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._AppImageId = value;
					this.SendPropertyChanged("AppImageId");
					this.OnAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Advice", Storage="_Advices", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<Advice> Advices
		{
			get
			{
				return this._Advices;
			}
			set
			{
				this._Advices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerDevice", Storage="_BuyerDevices", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<BuyerDevice> BuyerDevices
		{
			get
			{
				return this._BuyerDevices;
			}
			set
			{
				this._BuyerDevices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerPromotion", Storage="_BuyerPromotions", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<BuyerPromotion> BuyerPromotions
		{
			get
			{
				return this._BuyerPromotions;
			}
			set
			{
				this._BuyerPromotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerSeller", Storage="_BuyerSellers", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<BuyerSeller> BuyerSellers
		{
			get
			{
				return this._BuyerSellers;
			}
			set
			{
				this._BuyerSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_ContentSharingLog", Storage="_ContentSharingLogs", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<ContentSharingLog> ContentSharingLogs
		{
			get
			{
				return this._ContentSharingLogs;
			}
			set
			{
				this._ContentSharingLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_MyOrder", Storage="_MyOrders", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<MyOrder> MyOrders
		{
			get
			{
				return this._MyOrders;
			}
			set
			{
				this._MyOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Notification", Storage="_Notifications", ThisKey="BuyerID", OtherKey="BuyerID")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Buyer", Storage="_AppImage", ThisKey="AppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.Buyers.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.Buyers.Add(this);
						this._AppImageId = value.AppImageID;
					}
					else
					{
						this._AppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Buyer", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Buyers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Buyers.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Advices(Advice entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_Advices(Advice entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_BuyerDevices(BuyerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_BuyerDevices(BuyerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_BuyerPromotions(BuyerPromotion entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_BuyerPromotions(BuyerPromotion entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_BuyerSellers(BuyerSeller entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_BuyerSellers(BuyerSeller entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_ContentSharingLogs(ContentSharingLog entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_ContentSharingLogs(ContentSharingLog entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyerAdviceLog")]
	public partial class BuyerAdviceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyerAdviceLogId;
		
		private int _BuyerID;
		
		private int _AdviceId;
		
		private int _ButtonId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Advice> _Advice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerAdviceLogIdChanging(int value);
    partial void OnBuyerAdviceLogIdChanged();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnAdviceIdChanging(int value);
    partial void OnAdviceIdChanged();
    partial void OnButtonIdChanging(int value);
    partial void OnButtonIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public BuyerAdviceLog()
		{
			this._Advice = default(EntityRef<Advice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerAdviceLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuyerAdviceLogId
		{
			get
			{
				return this._BuyerAdviceLogId;
			}
			set
			{
				if ((this._BuyerAdviceLogId != value))
				{
					this.OnBuyerAdviceLogIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerAdviceLogId = value;
					this.SendPropertyChanged("BuyerAdviceLogId");
					this.OnBuyerAdviceLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int NOT NULL")]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviceId", DbType="Int NOT NULL")]
		public int AdviceId
		{
			get
			{
				return this._AdviceId;
			}
			set
			{
				if ((this._AdviceId != value))
				{
					if (this._Advice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._AdviceId = value;
					this.SendPropertyChanged("AdviceId");
					this.OnAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonId", DbType="Int NOT NULL")]
		public int ButtonId
		{
			get
			{
				return this._ButtonId;
			}
			set
			{
				if ((this._ButtonId != value))
				{
					this.OnButtonIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonId = value;
					this.SendPropertyChanged("ButtonId");
					this.OnButtonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advice_BuyerAdviceLog", Storage="_Advice", ThisKey="AdviceId", OtherKey="AdviceId", IsForeignKey=true)]
		public Advice Advice
		{
			get
			{
				return this._Advice.Entity;
			}
			set
			{
				Advice previousValue = this._Advice.Entity;
				if (((previousValue != value) 
							|| (this._Advice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advice.Entity = null;
						previousValue.BuyerAdviceLogs.Remove(this);
					}
					this._Advice.Entity = value;
					if ((value != null))
					{
						value.BuyerAdviceLogs.Add(this);
						this._AdviceId = value.AdviceId;
					}
					else
					{
						this._AdviceId = default(int);
					}
					this.SendPropertyChanged("Advice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyerDevice")]
	public partial class BuyerDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyerID;
		
		private int _DeviceID;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<Device> _Device;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public BuyerDevice()
		{
			this._Buyer = default(EntityRef<Buyer>);
			this._Device = default(EntityRef<Device>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerDevice", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.BuyerDevices.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.BuyerDevices.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(int);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_BuyerDevice", Storage="_Device", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.BuyerDevices.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.BuyerDevices.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(int);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyerPromotion")]
	public partial class BuyerPromotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyerID;
		
		private int _PromotionID;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<PromotionReading> _PromotionReadings;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnPromotionIDChanging(int value);
    partial void OnPromotionIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public BuyerPromotion()
		{
			this._PromotionReadings = new EntitySet<PromotionReading>(new Action<PromotionReading>(this.attach_PromotionReadings), new Action<PromotionReading>(this.detach_PromotionReadings));
			this._Buyer = default(EntityRef<Buyer>);
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyerPromotion_PromotionReading", Storage="_PromotionReadings", ThisKey="BuyerID,PromotionID", OtherKey="BuyerID,PromotionID")]
		public EntitySet<PromotionReading> PromotionReadings
		{
			get
			{
				return this._PromotionReadings;
			}
			set
			{
				this._PromotionReadings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerPromotion", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.BuyerPromotions.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.BuyerPromotions.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(int);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_BuyerPromotion", Storage="_Promotion", ThisKey="PromotionID", OtherKey="PromotionID", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.BuyerPromotions.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.BuyerPromotions.Add(this);
						this._PromotionID = value.PromotionID;
					}
					else
					{
						this._PromotionID = default(int);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PromotionReadings(PromotionReading entity)
		{
			this.SendPropertyChanging();
			entity.BuyerPromotion = this;
		}
		
		private void detach_PromotionReadings(PromotionReading entity)
		{
			this.SendPropertyChanging();
			entity.BuyerPromotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyerSeller")]
	public partial class BuyerSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuyerID;
		
		private int _SellerID;
		
		private System.Nullable<bool> _OfficialSeller;
		
		private System.Nullable<bool> _CreatorSeller;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnOfficialSellerChanging(System.Nullable<bool> value);
    partial void OnOfficialSellerChanged();
    partial void OnCreatorSellerChanging(System.Nullable<bool> value);
    partial void OnCreatorSellerChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public BuyerSeller()
		{
			this._Buyer = default(EntityRef<Buyer>);
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialSeller", DbType="Bit")]
		public System.Nullable<bool> OfficialSeller
		{
			get
			{
				return this._OfficialSeller;
			}
			set
			{
				if ((this._OfficialSeller != value))
				{
					this.OnOfficialSellerChanging(value);
					this.SendPropertyChanging();
					this._OfficialSeller = value;
					this.SendPropertyChanged("OfficialSeller");
					this.OnOfficialSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorSeller", DbType="Bit")]
		public System.Nullable<bool> CreatorSeller
		{
			get
			{
				return this._CreatorSeller;
			}
			set
			{
				if ((this._CreatorSeller != value))
				{
					this.OnCreatorSellerChanging(value);
					this.SendPropertyChanging();
					this._CreatorSeller = value;
					this.SendPropertyChanged("CreatorSeller");
					this.OnCreatorSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_BuyerSeller", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.BuyerSellers.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.BuyerSellers.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(int);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_BuyerSeller", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.BuyerSellers.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.BuyerSellers.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private System.Nullable<int> _SupplierID;
		
		private System.Nullable<int> _CategoryType;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _AppImageID;
		
		private System.Nullable<int> _ThumbAppImageID;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<CustomerTypeCategory> _CustomerTypeCategories;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
		private EntityRef<Category> _Category1;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnCategoryTypeChanging(System.Nullable<int> value);
    partial void OnCategoryTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnAppImageIDChanging(System.Nullable<int> value);
    partial void OnAppImageIDChanged();
    partial void OnThumbAppImageIDChanging(System.Nullable<int> value);
    partial void OnThumbAppImageIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Category()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._CustomerTypeCategories = new EntitySet<CustomerTypeCategory>(new Action<CustomerTypeCategory>(this.attach_CustomerTypeCategories), new Action<CustomerTypeCategory>(this.detach_CustomerTypeCategories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			this._Category1 = default(EntityRef<Category>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryType", DbType="Int")]
		public System.Nullable<int> CategoryType
		{
			get
			{
				return this._CategoryType;
			}
			set
			{
				if ((this._CategoryType != value))
				{
					this.OnCategoryTypeChanging(value);
					this.SendPropertyChanging();
					this._CategoryType = value;
					this.SendPropertyChanged("CategoryType");
					this.OnCategoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int")]
		public System.Nullable<int> AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbAppImageID", DbType="Int")]
		public System.Nullable<int> ThumbAppImageID
		{
			get
			{
				return this._ThumbAppImageID;
			}
			set
			{
				if ((this._ThumbAppImageID != value))
				{
					this.OnThumbAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._ThumbAppImageID = value;
					this.SendPropertyChanged("ThumbAppImageID");
					this.OnThumbAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="CategoryID", OtherKey="ParentID")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CustomerTypeCategory", Storage="_CustomerTypeCategories", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<CustomerTypeCategory> CustomerTypeCategories
		{
			get
			{
				return this._CustomerTypeCategories;
			}
			set
			{
				this._CustomerTypeCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product1", Storage="_Products1", ThisKey="CategoryID", OtherKey="CategoryTempID")]
		public EntitySet<Product> Products1
		{
			get
			{
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="ParentID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._ParentID = value.CategoryID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Category", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
		
		private void attach_CustomerTypeCategories(CustomerTypeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CustomerTypeCategories(CustomerTypeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _CityName;
		
		private System.Nullable<int> _StateID;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    #endregion
		
		public City()
		{
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(255)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CustomerLocation", Storage="_CustomerLocations", ThisKey="CityID", OtherKey="CityID")]
		public EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CodeLink")]
	public partial class CodeLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodeLinkID;
		
		private System.Nullable<int> _SellerID;
		
		private string _Code;
		
		private System.Nullable<bool> _Used;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeLinkIDChanging(int value);
    partial void OnCodeLinkIDChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnUsedChanging(System.Nullable<bool> value);
    partial void OnUsedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public CodeLink()
		{
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodeLinkID
		{
			get
			{
				return this._CodeLinkID;
			}
			set
			{
				if ((this._CodeLinkID != value))
				{
					this.OnCodeLinkIDChanging(value);
					this.SendPropertyChanging();
					this._CodeLinkID = value;
					this.SendPropertyChanged("CodeLinkID");
					this.OnCodeLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Used", DbType="Bit")]
		public System.Nullable<bool> Used
		{
			get
			{
				return this._Used;
			}
			set
			{
				if ((this._Used != value))
				{
					this.OnUsedChanging(value);
					this.SendPropertyChanging();
					this._Used = value;
					this.SendPropertyChanged("Used");
					this.OnUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_CodeLink", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.CodeLinks.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.CodeLinks.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentSharing")]
	public partial class ContentSharing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentSharingId;
		
		private string _Code;
		
		private string _Description;
		
		private string _Title;
		
		private string _Body;
		
		private System.Nullable<int> _AppImageID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private string _LinkURL;
		
		private EntitySet<ContentSharingLog> _ContentSharingLogs;
		
		private EntityRef<AppImage> _AppImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentSharingIdChanging(int value);
    partial void OnContentSharingIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnAppImageIDChanging(System.Nullable<int> value);
    partial void OnAppImageIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLinkURLChanging(string value);
    partial void OnLinkURLChanged();
    #endregion
		
		public ContentSharing()
		{
			this._ContentSharingLogs = new EntitySet<ContentSharingLog>(new Action<ContentSharingLog>(this.attach_ContentSharingLogs), new Action<ContentSharingLog>(this.detach_ContentSharingLogs));
			this._AppImage = default(EntityRef<AppImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSharingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentSharingId
		{
			get
			{
				return this._ContentSharingId;
			}
			set
			{
				if ((this._ContentSharingId != value))
				{
					this.OnContentSharingIdChanging(value);
					this.SendPropertyChanging();
					this._ContentSharingId = value;
					this.SendPropertyChanged("ContentSharingId");
					this.OnContentSharingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int")]
		public System.Nullable<int> AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkURL", DbType="VarChar(500)")]
		public string LinkURL
		{
			get
			{
				return this._LinkURL;
			}
			set
			{
				if ((this._LinkURL != value))
				{
					this.OnLinkURLChanging(value);
					this.SendPropertyChanging();
					this._LinkURL = value;
					this.SendPropertyChanged("LinkURL");
					this.OnLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSharing_ContentSharingLog", Storage="_ContentSharingLogs", ThisKey="ContentSharingId", OtherKey="ContentSharingId")]
		public EntitySet<ContentSharingLog> ContentSharingLogs
		{
			get
			{
				return this._ContentSharingLogs;
			}
			set
			{
				this._ContentSharingLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_ContentSharing", Storage="_AppImage", ThisKey="AppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.ContentSharings.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.ContentSharings.Add(this);
						this._AppImageID = value.AppImageID;
					}
					else
					{
						this._AppImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentSharingLogs(ContentSharingLog entity)
		{
			this.SendPropertyChanging();
			entity.ContentSharing = this;
		}
		
		private void detach_ContentSharingLogs(ContentSharingLog entity)
		{
			this.SendPropertyChanging();
			entity.ContentSharing = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentSharingLog")]
	public partial class ContentSharingLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentSharingLogId;
		
		private System.Nullable<int> _ContentSharingId;
		
		private System.Nullable<int> _BuyerID;
		
		private string _ContactName;
		
		private string _ContactEmail;
		
		private string _ContactPhone;
		
		private System.Nullable<bool> _UsingIOS;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<ContentSharing> _ContentSharing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentSharingLogIdChanging(int value);
    partial void OnContentSharingLogIdChanged();
    partial void OnContentSharingIdChanging(System.Nullable<int> value);
    partial void OnContentSharingIdChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnUsingIOSChanging(System.Nullable<bool> value);
    partial void OnUsingIOSChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ContentSharingLog()
		{
			this._Buyer = default(EntityRef<Buyer>);
			this._ContentSharing = default(EntityRef<ContentSharing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSharingLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentSharingLogId
		{
			get
			{
				return this._ContentSharingLogId;
			}
			set
			{
				if ((this._ContentSharingLogId != value))
				{
					this.OnContentSharingLogIdChanging(value);
					this.SendPropertyChanging();
					this._ContentSharingLogId = value;
					this.SendPropertyChanged("ContentSharingLogId");
					this.OnContentSharingLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSharingId", DbType="Int")]
		public System.Nullable<int> ContentSharingId
		{
			get
			{
				return this._ContentSharingId;
			}
			set
			{
				if ((this._ContentSharingId != value))
				{
					if (this._ContentSharing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentSharingIdChanging(value);
					this.SendPropertyChanging();
					this._ContentSharingId = value;
					this.SendPropertyChanged("ContentSharingId");
					this.OnContentSharingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(150)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(150)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(150)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingIOS", DbType="Bit")]
		public System.Nullable<bool> UsingIOS
		{
			get
			{
				return this._UsingIOS;
			}
			set
			{
				if ((this._UsingIOS != value))
				{
					this.OnUsingIOSChanging(value);
					this.SendPropertyChanging();
					this._UsingIOS = value;
					this.SendPropertyChanged("UsingIOS");
					this.OnUsingIOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_ContentSharingLog", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.ContentSharingLogs.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.ContentSharingLogs.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentSharing_ContentSharingLog", Storage="_ContentSharing", ThisKey="ContentSharingId", OtherKey="ContentSharingId", IsForeignKey=true)]
		public ContentSharing ContentSharing
		{
			get
			{
				return this._ContentSharing.Entity;
			}
			set
			{
				ContentSharing previousValue = this._ContentSharing.Entity;
				if (((previousValue != value) 
							|| (this._ContentSharing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentSharing.Entity = null;
						previousValue.ContentSharingLogs.Remove(this);
					}
					this._ContentSharing.Entity = value;
					if ((value != null))
					{
						value.ContentSharingLogs.Add(this);
						this._ContentSharingId = value.ContentSharingId;
					}
					else
					{
						this._ContentSharingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentSharing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Name;
		
		private string _Gentilicio;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGentilicioChanging(string value);
    partial void OnGentilicioChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Country()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gentilicio", DbType="VarChar(50)")]
		public string Gentilicio
		{
			get
			{
				return this._Gentilicio;
			}
			set
			{
				if ((this._Gentilicio != value))
				{
					this.OnGentilicioChanging(value);
					this.SendPropertyChanging();
					this._Gentilicio = value;
					this.SendPropertyChanged("Gentilicio");
					this.OnGentilicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Customer", Storage="_Customers", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditPurchase")]
	public partial class CreditPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditPurchaseId;
		
		private int _CustomerID;
		
		private int _PaymentMethod;
		
		private decimal _Amount;
		
		private System.Nullable<int> _Status;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditPurchaseIdChanging(int value);
    partial void OnCreditPurchaseIdChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnPaymentMethodChanging(int value);
    partial void OnPaymentMethodChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CreditPurchase()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditPurchaseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditPurchaseId
		{
			get
			{
				return this._CreditPurchaseId;
			}
			set
			{
				if ((this._CreditPurchaseId != value))
				{
					this.OnCreditPurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._CreditPurchaseId = value;
					this.SendPropertyChanged("CreditPurchaseId");
					this.OnCreditPurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="Int NOT NULL")]
		public int PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CreditPurchase", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CreditPurchases.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CreditPurchases.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private System.Nullable<int> _SegmentID;
		
		private string _Name;
		
		private string _Franchise;
		
		private string _BusinessName;
		
		private string _CNPJ;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<int> _AppImageId;
		
		private System.Nullable<int> _ThumbAppImageId;
		
		private string _Observation;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ChiefName;
		
		private string _ChiefPhone;
		
		private int _Status;
		
		private System.Nullable<int> _CustomerTypeID;
		
		private System.Nullable<decimal> _Credit;
		
		private System.Nullable<bool> _Vip;
		
		private System.Nullable<int> _CountryID;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Buyer> _Buyers;
		
		private EntitySet<CreditPurchase> _CreditPurchases;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
		private EntitySet<CustomerReVisit> _CustomerReVisits;
		
		private EntitySet<CustomerVisit> _CustomerVisits;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<AppImage> _AppImage1;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<CustomerType> _CustomerType;
		
		private EntityRef<Segment> _Segment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnSegmentIDChanging(System.Nullable<int> value);
    partial void OnSegmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFranchiseChanging(string value);
    partial void OnFranchiseChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnCNPJChanging(string value);
    partial void OnCNPJChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnAppImageIdChanging(System.Nullable<int> value);
    partial void OnAppImageIdChanged();
    partial void OnThumbAppImageIdChanging(System.Nullable<int> value);
    partial void OnThumbAppImageIdChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnChiefNameChanging(string value);
    partial void OnChiefNameChanged();
    partial void OnChiefPhoneChanging(string value);
    partial void OnChiefPhoneChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<int> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    partial void OnVipChanging(System.Nullable<bool> value);
    partial void OnVipChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Customer()
		{
			this._Buyers = new EntitySet<Buyer>(new Action<Buyer>(this.attach_Buyers), new Action<Buyer>(this.detach_Buyers));
			this._CreditPurchases = new EntitySet<CreditPurchase>(new Action<CreditPurchase>(this.attach_CreditPurchases), new Action<CreditPurchase>(this.detach_CreditPurchases));
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			this._CustomerReVisits = new EntitySet<CustomerReVisit>(new Action<CustomerReVisit>(this.attach_CustomerReVisits), new Action<CustomerReVisit>(this.detach_CustomerReVisits));
			this._CustomerVisits = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisits), new Action<CustomerVisit>(this.detach_CustomerVisits));
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._AppImage = default(EntityRef<AppImage>);
			this._AppImage1 = default(EntityRef<AppImage>);
			this._Country = default(EntityRef<Country>);
			this._CustomerType = default(EntityRef<CustomerType>);
			this._Segment = default(EntityRef<Segment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int")]
		public System.Nullable<int> SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Franchise", DbType="VarChar(100)")]
		public string Franchise
		{
			get
			{
				return this._Franchise;
			}
			set
			{
				if ((this._Franchise != value))
				{
					this.OnFranchiseChanging(value);
					this.SendPropertyChanging();
					this._Franchise = value;
					this.SendPropertyChanged("Franchise");
					this.OnFranchiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="VarChar(100)")]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="VarChar(50)")]
		public string CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this.OnCNPJChanging(value);
					this.SendPropertyChanging();
					this._CNPJ = value;
					this.SendPropertyChanged("CNPJ");
					this.OnCNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageId", DbType="Int")]
		public System.Nullable<int> AppImageId
		{
			get
			{
				return this._AppImageId;
			}
			set
			{
				if ((this._AppImageId != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._AppImageId = value;
					this.SendPropertyChanged("AppImageId");
					this.OnAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbAppImageId", DbType="Int")]
		public System.Nullable<int> ThumbAppImageId
		{
			get
			{
				return this._ThumbAppImageId;
			}
			set
			{
				if ((this._ThumbAppImageId != value))
				{
					if (this._AppImage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThumbAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._ThumbAppImageId = value;
					this.SendPropertyChanged("ThumbAppImageId");
					this.OnThumbAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(100)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefName", DbType="VarChar(100)")]
		public string ChiefName
		{
			get
			{
				return this._ChiefName;
			}
			set
			{
				if ((this._ChiefName != value))
				{
					this.OnChiefNameChanging(value);
					this.SendPropertyChanging();
					this._ChiefName = value;
					this.SendPropertyChanged("ChiefName");
					this.OnChiefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefPhone", DbType="VarChar(50)")]
		public string ChiefPhone
		{
			get
			{
				return this._ChiefPhone;
			}
			set
			{
				if ((this._ChiefPhone != value))
				{
					this.OnChiefPhoneChanging(value);
					this.SendPropertyChanging();
					this._ChiefPhone = value;
					this.SendPropertyChanged("ChiefPhone");
					this.OnChiefPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int")]
		public System.Nullable<int> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Bit")]
		public System.Nullable<bool> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Buyer", Storage="_Buyers", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Buyer> Buyers
		{
			get
			{
				return this._Buyers;
			}
			set
			{
				this._Buyers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CreditPurchase", Storage="_CreditPurchases", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CreditPurchase> CreditPurchases
		{
			get
			{
				return this._CreditPurchases;
			}
			set
			{
				this._CreditPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerLocation", Storage="_CustomerLocations", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerReVisit", Storage="_CustomerReVisits", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CustomerReVisit> CustomerReVisits
		{
			get
			{
				return this._CustomerReVisits;
			}
			set
			{
				this._CustomerReVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerVisit", Storage="_CustomerVisits", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CustomerVisit> CustomerVisits
		{
			get
			{
				return this._CustomerVisits;
			}
			set
			{
				this._CustomerVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Bills", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Customer", Storage="_AppImage", ThisKey="AppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._AppImageId = value.AppImageID;
					}
					else
					{
						this._AppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Customer1", Storage="_AppImage1", ThisKey="ThumbAppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage1
		{
			get
			{
				return this._AppImage1.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage1.Entity;
				if (((previousValue != value) 
							|| (this._AppImage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage1.Entity = null;
						previousValue.Customers1.Remove(this);
					}
					this._AppImage1.Entity = value;
					if ((value != null))
					{
						value.Customers1.Add(this);
						this._ThumbAppImageId = value.AppImageID;
					}
					else
					{
						this._ThumbAppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Customer", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CustomerTypeID = value.CustomerTypeID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_Customer", Storage="_Segment", ThisKey="SegmentID", OtherKey="SegmentID", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._SegmentID = value.SegmentID;
					}
					else
					{
						this._SegmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CreditPurchases(CreditPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CreditPurchases(CreditPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerReVisits(CustomerReVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerReVisits(CustomerReVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerLocation")]
	public partial class CustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerLocationID;
		
		private int _CustomerID;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _Description;
		
		private string _Address;
		
		private System.Nullable<int> _Number;
		
		private string _Complement;
		
		private string _Locality;
		
		private System.Nullable<int> _CityID;
		
		private string _Reference;
		
		private System.Nullable<int> _AppImageID;
		
		private System.Nullable<bool> _Temporary;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntityRef<City> _City;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<AppImage> _AppImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerLocationIDChanging(int value);
    partial void OnCustomerLocationIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnComplementChanging(string value);
    partial void OnComplementChanged();
    partial void OnLocalityChanging(string value);
    partial void OnLocalityChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnAppImageIDChanging(System.Nullable<int> value);
    partial void OnAppImageIDChanged();
    partial void OnTemporaryChanging(System.Nullable<bool> value);
    partial void OnTemporaryChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerLocation()
		{
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._City = default(EntityRef<City>);
			this._Customer = default(EntityRef<Customer>);
			this._AppImage = default(EntityRef<AppImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerLocationID
		{
			get
			{
				return this._CustomerLocationID;
			}
			set
			{
				if ((this._CustomerLocationID != value))
				{
					this.OnCustomerLocationIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerLocationID = value;
					this.SendPropertyChanged("CustomerLocationID");
					this.OnCustomerLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complement", DbType="VarChar(100)")]
		public string Complement
		{
			get
			{
				return this._Complement;
			}
			set
			{
				if ((this._Complement != value))
				{
					this.OnComplementChanging(value);
					this.SendPropertyChanging();
					this._Complement = value;
					this.SendPropertyChanged("Complement");
					this.OnComplementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locality", DbType="VarChar(50)")]
		public string Locality
		{
			get
			{
				return this._Locality;
			}
			set
			{
				if ((this._Locality != value))
				{
					this.OnLocalityChanging(value);
					this.SendPropertyChanging();
					this._Locality = value;
					this.SendPropertyChanged("Locality");
					this.OnLocalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(200)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int")]
		public System.Nullable<int> AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temporary", DbType="Bit")]
		public System.Nullable<bool> Temporary
		{
			get
			{
				return this._Temporary;
			}
			set
			{
				if ((this._Temporary != value))
				{
					this.OnTemporaryChanging(value);
					this.SendPropertyChanging();
					this._Temporary = value;
					this.SendPropertyChanged("Temporary");
					this.OnTemporaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="CustomerLocationID", OtherKey="CustomerLocationID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CustomerLocation", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerLocation", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_CustomerLocation", Storage="_AppImage", ThisKey="AppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._AppImageID = value.AppImageID;
					}
					else
					{
						this._AppImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerResponse")]
	public partial class CustomerResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerResponseID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _Action;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<CustomerVisitProduct> _CustomerVisitProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerResponseIDChanging(int value);
    partial void OnCustomerResponseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActionChanging(System.Nullable<int> value);
    partial void OnActionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerResponse()
		{
			this._CustomerVisitProducts = new EntitySet<CustomerVisitProduct>(new Action<CustomerVisitProduct>(this.attach_CustomerVisitProducts), new Action<CustomerVisitProduct>(this.detach_CustomerVisitProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerResponseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerResponseID
		{
			get
			{
				return this._CustomerResponseID;
			}
			set
			{
				if ((this._CustomerResponseID != value))
				{
					this.OnCustomerResponseIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerResponseID = value;
					this.SendPropertyChanged("CustomerResponseID");
					this.OnCustomerResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int")]
		public System.Nullable<int> Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerResponse_CustomerVisitProduct", Storage="_CustomerVisitProducts", ThisKey="CustomerResponseID", OtherKey="CustomerResponseID")]
		public EntitySet<CustomerVisitProduct> CustomerVisitProducts
		{
			get
			{
				return this._CustomerVisitProducts;
			}
			set
			{
				this._CustomerVisitProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomerResponse = this;
		}
		
		private void detach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomerResponse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerReVisit")]
	public partial class CustomerReVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerReVisitId;
		
		private int _CustomerID;
		
		private int _ReVisitResultId;
		
		private string _NextStep;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerReVisitIdChanging(int value);
    partial void OnCustomerReVisitIdChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnReVisitResultIdChanging(int value);
    partial void OnReVisitResultIdChanged();
    partial void OnNextStepChanging(string value);
    partial void OnNextStepChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerReVisit()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReVisitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerReVisitId
		{
			get
			{
				return this._CustomerReVisitId;
			}
			set
			{
				if ((this._CustomerReVisitId != value))
				{
					this.OnCustomerReVisitIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerReVisitId = value;
					this.SendPropertyChanged("CustomerReVisitId");
					this.OnCustomerReVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReVisitResultId", DbType="Int NOT NULL")]
		public int ReVisitResultId
		{
			get
			{
				return this._ReVisitResultId;
			}
			set
			{
				if ((this._ReVisitResultId != value))
				{
					this.OnReVisitResultIdChanging(value);
					this.SendPropertyChanging();
					this._ReVisitResultId = value;
					this.SendPropertyChanged("ReVisitResultId");
					this.OnReVisitResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStep", DbType="VarChar(100)")]
		public string NextStep
		{
			get
			{
				return this._NextStep;
			}
			set
			{
				if ((this._NextStep != value))
				{
					this.OnNextStepChanging(value);
					this.SendPropertyChanging();
					this._NextStep = value;
					this.SendPropertyChanged("NextStep");
					this.OnNextStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerReVisit", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerReVisits.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerReVisits.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerType")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerTypeID;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<CustomerTypeCategory> _CustomerTypeCategories;
		
		private EntitySet<PriceList> _PriceLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerTypeIDChanging(int value);
    partial void OnCustomerTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerType()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._CustomerTypeCategories = new EntitySet<CustomerTypeCategory>(new Action<CustomerTypeCategory>(this.attach_CustomerTypeCategories), new Action<CustomerTypeCategory>(this.detach_CustomerTypeCategories));
			this._PriceLists = new EntitySet<PriceList>(new Action<PriceList>(this.attach_PriceLists), new Action<PriceList>(this.detach_PriceLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_Customers", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_CustomerTypeCategory", Storage="_CustomerTypeCategories", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID")]
		public EntitySet<CustomerTypeCategory> CustomerTypeCategories
		{
			get
			{
				return this._CustomerTypeCategories;
			}
			set
			{
				this._CustomerTypeCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_PriceList", Storage="_PriceLists", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID")]
		public EntitySet<PriceList> PriceLists
		{
			get
			{
				return this._PriceLists;
			}
			set
			{
				this._PriceLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
		
		private void attach_CustomerTypeCategories(CustomerTypeCategory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_CustomerTypeCategories(CustomerTypeCategory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
		
		private void attach_PriceLists(PriceList entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_PriceLists(PriceList entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerTypeCategory")]
	public partial class CustomerTypeCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerTypeID;
		
		private int _CategoryID;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerTypeIDChanging(int value);
    partial void OnCustomerTypeIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public CustomerTypeCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CustomerTypeCategory", Storage="_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CustomerTypeCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CustomerTypeCategories.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_CustomerTypeCategory", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.CustomerTypeCategories.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.CustomerTypeCategories.Add(this);
						this._CustomerTypeID = value.CustomerTypeID;
					}
					else
					{
						this._CustomerTypeID = default(int);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerVisit")]
	public partial class CustomerVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerVisitID;
		
		private int _CustomerID;
		
		private int _SellerID;
		
		private string _Name;
		
		private string _Franchise;
		
		private string _Phone;
		
		private System.Nullable<int> _SegmentID;
		
		private System.Nullable<int> _AppImageId;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _Observation;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ChiefName;
		
		private string _ChiefPhone;
		
		private string _Description;
		
		private string _BusinessName;
		
		private string _BusinessDocument;
		
		private string _Email;
		
		private string _ChiefDocument;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _VisitStart;
		
		private System.Nullable<System.DateTime> _VisitEnd;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<CustomerVisitProduct> _CustomerVisitProducts;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Segment> _Segment;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerVisitIDChanging(int value);
    partial void OnCustomerVisitIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFranchiseChanging(string value);
    partial void OnFranchiseChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnSegmentIDChanging(System.Nullable<int> value);
    partial void OnSegmentIDChanged();
    partial void OnAppImageIdChanging(System.Nullable<int> value);
    partial void OnAppImageIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnChiefNameChanging(string value);
    partial void OnChiefNameChanged();
    partial void OnChiefPhoneChanging(string value);
    partial void OnChiefPhoneChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnBusinessDocumentChanging(string value);
    partial void OnBusinessDocumentChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnChiefDocumentChanging(string value);
    partial void OnChiefDocumentChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnVisitStartChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitStartChanged();
    partial void OnVisitEndChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitEndChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerVisit()
		{
			this._CustomerVisitProducts = new EntitySet<CustomerVisitProduct>(new Action<CustomerVisitProduct>(this.attach_CustomerVisitProducts), new Action<CustomerVisitProduct>(this.detach_CustomerVisitProducts));
			this._AppImage = default(EntityRef<AppImage>);
			this._Customer = default(EntityRef<Customer>);
			this._Segment = default(EntityRef<Segment>);
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerVisitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerVisitID
		{
			get
			{
				return this._CustomerVisitID;
			}
			set
			{
				if ((this._CustomerVisitID != value))
				{
					this.OnCustomerVisitIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerVisitID = value;
					this.SendPropertyChanged("CustomerVisitID");
					this.OnCustomerVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Franchise", DbType="VarChar(100)")]
		public string Franchise
		{
			get
			{
				return this._Franchise;
			}
			set
			{
				if ((this._Franchise != value))
				{
					this.OnFranchiseChanging(value);
					this.SendPropertyChanging();
					this._Franchise = value;
					this.SendPropertyChanged("Franchise");
					this.OnFranchiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int")]
		public System.Nullable<int> SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageId", DbType="Int")]
		public System.Nullable<int> AppImageId
		{
			get
			{
				return this._AppImageId;
			}
			set
			{
				if ((this._AppImageId != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._AppImageId = value;
					this.SendPropertyChanged("AppImageId");
					this.OnAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observation", DbType="VarChar(300)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(100)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefName", DbType="VarChar(100)")]
		public string ChiefName
		{
			get
			{
				return this._ChiefName;
			}
			set
			{
				if ((this._ChiefName != value))
				{
					this.OnChiefNameChanging(value);
					this.SendPropertyChanging();
					this._ChiefName = value;
					this.SendPropertyChanged("ChiefName");
					this.OnChiefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefPhone", DbType="VarChar(50)")]
		public string ChiefPhone
		{
			get
			{
				return this._ChiefPhone;
			}
			set
			{
				if ((this._ChiefPhone != value))
				{
					this.OnChiefPhoneChanging(value);
					this.SendPropertyChanging();
					this._ChiefPhone = value;
					this.SendPropertyChanged("ChiefPhone");
					this.OnChiefPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="VarChar(100)")]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessDocument", DbType="VarChar(50)")]
		public string BusinessDocument
		{
			get
			{
				return this._BusinessDocument;
			}
			set
			{
				if ((this._BusinessDocument != value))
				{
					this.OnBusinessDocumentChanging(value);
					this.SendPropertyChanging();
					this._BusinessDocument = value;
					this.SendPropertyChanged("BusinessDocument");
					this.OnBusinessDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefDocument", DbType="VarChar(50)")]
		public string ChiefDocument
		{
			get
			{
				return this._ChiefDocument;
			}
			set
			{
				if ((this._ChiefDocument != value))
				{
					this.OnChiefDocumentChanging(value);
					this.SendPropertyChanging();
					this._ChiefDocument = value;
					this.SendPropertyChanged("ChiefDocument");
					this.OnChiefDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitStart
		{
			get
			{
				return this._VisitStart;
			}
			set
			{
				if ((this._VisitStart != value))
				{
					this.OnVisitStartChanging(value);
					this.SendPropertyChanging();
					this._VisitStart = value;
					this.SendPropertyChanged("VisitStart");
					this.OnVisitStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitEnd
		{
			get
			{
				return this._VisitEnd;
			}
			set
			{
				if ((this._VisitEnd != value))
				{
					this.OnVisitEndChanging(value);
					this.SendPropertyChanging();
					this._VisitEnd = value;
					this.SendPropertyChanged("VisitEnd");
					this.OnVisitEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerVisit_CustomerVisitProduct", Storage="_CustomerVisitProducts", ThisKey="CustomerVisitID", OtherKey="CustomerVisitID")]
		public EntitySet<CustomerVisitProduct> CustomerVisitProducts
		{
			get
			{
				return this._CustomerVisitProducts;
			}
			set
			{
				this._CustomerVisitProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_CustomerVisit", Storage="_AppImage", ThisKey="AppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.CustomerVisits.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.CustomerVisits.Add(this);
						this._AppImageId = value.AppImageID;
					}
					else
					{
						this._AppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerVisit", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerVisits.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerVisits.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_CustomerVisit", Storage="_Segment", ThisKey="SegmentID", OtherKey="SegmentID", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.CustomerVisits.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.CustomerVisits.Add(this);
						this._SegmentID = value.SegmentID;
					}
					else
					{
						this._SegmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_CustomerVisit", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.CustomerVisits.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.CustomerVisits.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomerVisit = this;
		}
		
		private void detach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.CustomerVisit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerVisitProduct")]
	public partial class CustomerVisitProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerVisitID;
		
		private int _ProductID;
		
		private System.Nullable<int> _PriceListID;
		
		private int _CustomerResponseID;
		
		private System.Nullable<int> _OrderPeriodID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _PeriodConsumptionID;
		
		private System.Nullable<int> _QuantityConsumption;
		
		private EntityRef<CustomerResponse> _CustomerResponse;
		
		private EntityRef<CustomerVisit> _CustomerVisit;
		
		private EntityRef<PriceListDetail> _PriceListDetail;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerVisitIDChanging(int value);
    partial void OnCustomerVisitIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnPriceListIDChanging(System.Nullable<int> value);
    partial void OnPriceListIDChanged();
    partial void OnCustomerResponseIDChanging(int value);
    partial void OnCustomerResponseIDChanged();
    partial void OnOrderPeriodIDChanging(System.Nullable<int> value);
    partial void OnOrderPeriodIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnPeriodConsumptionIDChanging(System.Nullable<int> value);
    partial void OnPeriodConsumptionIDChanged();
    partial void OnQuantityConsumptionChanging(System.Nullable<int> value);
    partial void OnQuantityConsumptionChanged();
    #endregion
		
		public CustomerVisitProduct()
		{
			this._CustomerResponse = default(EntityRef<CustomerResponse>);
			this._CustomerVisit = default(EntityRef<CustomerVisit>);
			this._PriceListDetail = default(EntityRef<PriceListDetail>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerVisitID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerVisitID
		{
			get
			{
				return this._CustomerVisitID;
			}
			set
			{
				if ((this._CustomerVisitID != value))
				{
					if (this._CustomerVisit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerVisitIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerVisitID = value;
					this.SendPropertyChanged("CustomerVisitID");
					this.OnCustomerVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if ((this._PriceListDetail.HasLoadedOrAssignedValue || this._Product.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListID", DbType="Int")]
		public System.Nullable<int> PriceListID
		{
			get
			{
				return this._PriceListID;
			}
			set
			{
				if ((this._PriceListID != value))
				{
					if (this._PriceListDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListIDChanging(value);
					this.SendPropertyChanging();
					this._PriceListID = value;
					this.SendPropertyChanged("PriceListID");
					this.OnPriceListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerResponseID", DbType="Int NOT NULL")]
		public int CustomerResponseID
		{
			get
			{
				return this._CustomerResponseID;
			}
			set
			{
				if ((this._CustomerResponseID != value))
				{
					if (this._CustomerResponse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerResponseIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerResponseID = value;
					this.SendPropertyChanged("CustomerResponseID");
					this.OnCustomerResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPeriodID", DbType="Int")]
		public System.Nullable<int> OrderPeriodID
		{
			get
			{
				return this._OrderPeriodID;
			}
			set
			{
				if ((this._OrderPeriodID != value))
				{
					this.OnOrderPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._OrderPeriodID = value;
					this.SendPropertyChanged("OrderPeriodID");
					this.OnOrderPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodConsumptionID", DbType="Int")]
		public System.Nullable<int> PeriodConsumptionID
		{
			get
			{
				return this._PeriodConsumptionID;
			}
			set
			{
				if ((this._PeriodConsumptionID != value))
				{
					this.OnPeriodConsumptionIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodConsumptionID = value;
					this.SendPropertyChanged("PeriodConsumptionID");
					this.OnPeriodConsumptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityConsumption", DbType="Int")]
		public System.Nullable<int> QuantityConsumption
		{
			get
			{
				return this._QuantityConsumption;
			}
			set
			{
				if ((this._QuantityConsumption != value))
				{
					this.OnQuantityConsumptionChanging(value);
					this.SendPropertyChanging();
					this._QuantityConsumption = value;
					this.SendPropertyChanged("QuantityConsumption");
					this.OnQuantityConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerResponse_CustomerVisitProduct", Storage="_CustomerResponse", ThisKey="CustomerResponseID", OtherKey="CustomerResponseID", IsForeignKey=true)]
		public CustomerResponse CustomerResponse
		{
			get
			{
				return this._CustomerResponse.Entity;
			}
			set
			{
				CustomerResponse previousValue = this._CustomerResponse.Entity;
				if (((previousValue != value) 
							|| (this._CustomerResponse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerResponse.Entity = null;
						previousValue.CustomerVisitProducts.Remove(this);
					}
					this._CustomerResponse.Entity = value;
					if ((value != null))
					{
						value.CustomerVisitProducts.Add(this);
						this._CustomerResponseID = value.CustomerResponseID;
					}
					else
					{
						this._CustomerResponseID = default(int);
					}
					this.SendPropertyChanged("CustomerResponse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerVisit_CustomerVisitProduct", Storage="_CustomerVisit", ThisKey="CustomerVisitID", OtherKey="CustomerVisitID", IsForeignKey=true)]
		public CustomerVisit CustomerVisit
		{
			get
			{
				return this._CustomerVisit.Entity;
			}
			set
			{
				CustomerVisit previousValue = this._CustomerVisit.Entity;
				if (((previousValue != value) 
							|| (this._CustomerVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerVisit.Entity = null;
						previousValue.CustomerVisitProducts.Remove(this);
					}
					this._CustomerVisit.Entity = value;
					if ((value != null))
					{
						value.CustomerVisitProducts.Add(this);
						this._CustomerVisitID = value.CustomerVisitID;
					}
					else
					{
						this._CustomerVisitID = default(int);
					}
					this.SendPropertyChanged("CustomerVisit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListDetail_CustomerVisitProduct", Storage="_PriceListDetail", ThisKey="PriceListID,ProductID", OtherKey="PriceListID,ProductID", IsForeignKey=true)]
		public PriceListDetail PriceListDetail
		{
			get
			{
				return this._PriceListDetail.Entity;
			}
			set
			{
				PriceListDetail previousValue = this._PriceListDetail.Entity;
				if (((previousValue != value) 
							|| (this._PriceListDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceListDetail.Entity = null;
						previousValue.CustomerVisitProducts.Remove(this);
					}
					this._PriceListDetail.Entity = value;
					if ((value != null))
					{
						value.CustomerVisitProducts.Add(this);
						this._PriceListID = value.PriceListID;
						this._ProductID = value.ProductID;
					}
					else
					{
						this._PriceListID = default(Nullable<int>);
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("PriceListDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomerVisitProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CustomerVisitProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CustomerVisitProducts.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dealer")]
	public partial class Dealer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealerID;
		
		private bool _IsBlocked;
		
		private bool _IsAdmin;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealerIDChanging(int value);
    partial void OnDealerIDChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Dealer()
		{
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dealer_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="DealerID", OtherKey="DealerID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Dealer", Storage="_Employee", ThisKey="DealerID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Dealer = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Dealer = this;
						this._DealerID = value.EmployeeID;
					}
					else
					{
						this._DealerID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dealer = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Dealer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Device")]
	public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeviceID;
		
		private string _Description;
		
		private string _DeviceToken;
		
		private string _PushToken;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<long> _SimCardNumber;
		
		private System.Nullable<int> _DeviceOS;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<BuyerDevice> _BuyerDevices;
		
		private EntitySet<EmployeeDevice> _EmployeeDevices;
		
		private EntitySet<SellerDevice> _SellerDevices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeviceTokenChanging(string value);
    partial void OnDeviceTokenChanged();
    partial void OnPushTokenChanging(string value);
    partial void OnPushTokenChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnSimCardNumberChanging(System.Nullable<long> value);
    partial void OnSimCardNumberChanged();
    partial void OnDeviceOSChanging(System.Nullable<int> value);
    partial void OnDeviceOSChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Device()
		{
			this._BuyerDevices = new EntitySet<BuyerDevice>(new Action<BuyerDevice>(this.attach_BuyerDevices), new Action<BuyerDevice>(this.detach_BuyerDevices));
			this._EmployeeDevices = new EntitySet<EmployeeDevice>(new Action<EmployeeDevice>(this.attach_EmployeeDevices), new Action<EmployeeDevice>(this.detach_EmployeeDevices));
			this._SellerDevices = new EntitySet<SellerDevice>(new Action<SellerDevice>(this.attach_SellerDevices), new Action<SellerDevice>(this.detach_SellerDevices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceToken", DbType="VarChar(150)")]
		public string DeviceToken
		{
			get
			{
				return this._DeviceToken;
			}
			set
			{
				if ((this._DeviceToken != value))
				{
					this.OnDeviceTokenChanging(value);
					this.SendPropertyChanging();
					this._DeviceToken = value;
					this.SendPropertyChanged("DeviceToken");
					this.OnDeviceTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushToken", DbType="VarChar(150)")]
		public string PushToken
		{
			get
			{
				return this._PushToken;
			}
			set
			{
				if ((this._PushToken != value))
				{
					this.OnPushTokenChanging(value);
					this.SendPropertyChanging();
					this._PushToken = value;
					this.SendPropertyChanged("PushToken");
					this.OnPushTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimCardNumber", DbType="BigInt")]
		public System.Nullable<long> SimCardNumber
		{
			get
			{
				return this._SimCardNumber;
			}
			set
			{
				if ((this._SimCardNumber != value))
				{
					this.OnSimCardNumberChanging(value);
					this.SendPropertyChanging();
					this._SimCardNumber = value;
					this.SendPropertyChanged("SimCardNumber");
					this.OnSimCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceOS", DbType="Int")]
		public System.Nullable<int> DeviceOS
		{
			get
			{
				return this._DeviceOS;
			}
			set
			{
				if ((this._DeviceOS != value))
				{
					this.OnDeviceOSChanging(value);
					this.SendPropertyChanging();
					this._DeviceOS = value;
					this.SendPropertyChanged("DeviceOS");
					this.OnDeviceOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_BuyerDevice", Storage="_BuyerDevices", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<BuyerDevice> BuyerDevices
		{
			get
			{
				return this._BuyerDevices;
			}
			set
			{
				this._BuyerDevices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_EmployeeDevice", Storage="_EmployeeDevices", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<EmployeeDevice> EmployeeDevices
		{
			get
			{
				return this._EmployeeDevices;
			}
			set
			{
				this._EmployeeDevices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_SellerDevice", Storage="_SellerDevices", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<SellerDevice> SellerDevices
		{
			get
			{
				return this._SellerDevices;
			}
			set
			{
				this._SellerDevices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuyerDevices(BuyerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_BuyerDevices(BuyerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
		
		private void attach_EmployeeDevices(EmployeeDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_EmployeeDevices(EmployeeDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
		
		private void attach_SellerDevices(SellerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_SellerDevices(SellerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailNotification")]
	public partial class EmailNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailNotificationID;
		
		private string _EmailFrom;
		
		private string _EmailTo;
		
		private string _Subject;
		
		private string _BodyText;
		
		private string _BodyHtml;
		
		private System.Nullable<System.DateTime> _DateToSend;
		
		private System.Nullable<bool> _Send;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailNotificationIDChanging(int value);
    partial void OnEmailNotificationIDChanged();
    partial void OnEmailFromChanging(string value);
    partial void OnEmailFromChanged();
    partial void OnEmailToChanging(string value);
    partial void OnEmailToChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyTextChanging(string value);
    partial void OnBodyTextChanged();
    partial void OnBodyHtmlChanging(string value);
    partial void OnBodyHtmlChanged();
    partial void OnDateToSendChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToSendChanged();
    partial void OnSendChanging(System.Nullable<bool> value);
    partial void OnSendChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public EmailNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailNotificationID
		{
			get
			{
				return this._EmailNotificationID;
			}
			set
			{
				if ((this._EmailNotificationID != value))
				{
					this.OnEmailNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._EmailNotificationID = value;
					this.SendPropertyChanged("EmailNotificationID");
					this.OnEmailNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailFrom", DbType="VarChar(100)")]
		public string EmailFrom
		{
			get
			{
				return this._EmailFrom;
			}
			set
			{
				if ((this._EmailFrom != value))
				{
					this.OnEmailFromChanging(value);
					this.SendPropertyChanging();
					this._EmailFrom = value;
					this.SendPropertyChanged("EmailFrom");
					this.OnEmailFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTo", DbType="VarChar(100)")]
		public string EmailTo
		{
			get
			{
				return this._EmailTo;
			}
			set
			{
				if ((this._EmailTo != value))
				{
					this.OnEmailToChanging(value);
					this.SendPropertyChanging();
					this._EmailTo = value;
					this.SendPropertyChanged("EmailTo");
					this.OnEmailToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(250)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyText
		{
			get
			{
				return this._BodyText;
			}
			set
			{
				if ((this._BodyText != value))
				{
					this.OnBodyTextChanging(value);
					this.SendPropertyChanging();
					this._BodyText = value;
					this.SendPropertyChanged("BodyText");
					this.OnBodyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyHtml", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BodyHtml
		{
			get
			{
				return this._BodyHtml;
			}
			set
			{
				if ((this._BodyHtml != value))
				{
					this.OnBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._BodyHtml = value;
					this.SendPropertyChanged("BodyHtml");
					this.OnBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateToSend
		{
			get
			{
				return this._DateToSend;
			}
			set
			{
				if ((this._DateToSend != value))
				{
					this.OnDateToSendChanging(value);
					this.SendPropertyChanging();
					this._DateToSend = value;
					this.SendPropertyChanged("DateToSend");
					this.OnDateToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Send", DbType="Bit")]
		public System.Nullable<bool> Send
		{
			get
			{
				return this._Send;
			}
			set
			{
				if ((this._Send != value))
				{
					this.OnSendChanging(value);
					this.SendPropertyChanging();
					this._Send = value;
					this.SendPropertyChanged("Send");
					this.OnSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private int _SupplierID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Password;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<char> _Gender;
		
		private string _SerialKey;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Dealer> _Dealer;
		
		private EntitySet<EmployeeAdvice> _EmployeeAdvices;
		
		private EntitySet<EmployeeDevice> _EmployeeDevices;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntityRef<Seller> _Seller;
		
		private EntitySet<Version> _Versions;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnSerialKeyChanging(string value);
    partial void OnSerialKeyChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Employee()
		{
			this._Dealer = default(EntityRef<Dealer>);
			this._EmployeeAdvices = new EntitySet<EmployeeAdvice>(new Action<EmployeeAdvice>(this.attach_EmployeeAdvices), new Action<EmployeeAdvice>(this.detach_EmployeeAdvices));
			this._EmployeeDevices = new EntitySet<EmployeeDevice>(new Action<EmployeeDevice>(this.attach_EmployeeDevices), new Action<EmployeeDevice>(this.detach_EmployeeDevices));
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._Seller = default(EntityRef<Seller>);
			this._Versions = new EntitySet<Version>(new Action<Version>(this.attach_Versions), new Action<Version>(this.detach_Versions));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialKey", DbType="VarChar(150)")]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Dealer", Storage="_Dealer", ThisKey="EmployeeID", OtherKey="DealerID", IsUnique=true, IsForeignKey=false)]
		public Dealer Dealer
		{
			get
			{
				return this._Dealer.Entity;
			}
			set
			{
				Dealer previousValue = this._Dealer.Entity;
				if (((previousValue != value) 
							|| (this._Dealer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dealer.Entity = null;
						previousValue.Employee = null;
					}
					this._Dealer.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("Dealer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeAdvice", Storage="_EmployeeAdvices", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<EmployeeAdvice> EmployeeAdvices
		{
			get
			{
				return this._EmployeeAdvices;
			}
			set
			{
				this._EmployeeAdvices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDevice", Storage="_EmployeeDevices", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<EmployeeDevice> EmployeeDevices
		{
			get
			{
				return this._EmployeeDevices;
			}
			set
			{
				this._EmployeeDevices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="EmployeeID", OtherKey="InteractorEmployeeId")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Seller", Storage="_Seller", ThisKey="EmployeeID", OtherKey="SellerID", IsUnique=true, IsForeignKey=false)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.Employee = null;
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Version", Storage="_Versions", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<Version> Versions
		{
			get
			{
				return this._Versions;
			}
			set
			{
				this._Versions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Employee", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeAdvices(EmployeeAdvice entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeAdvices(EmployeeAdvice entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeDevices(EmployeeDevice entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeDevices(EmployeeDevice entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Versions(Version entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Versions(Version entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAdvice")]
	public partial class EmployeeAdvice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeAdviceId;
		
		private bool _IsPublic;
		
		private System.Nullable<int> _EmployeeID;
		
		private int _EmployeeType;
		
		private string _Title;
		
		private string _Call;
		
		private string _Body;
		
		private System.Nullable<int> _AppImageId;
		
		private string _PictureName;
		
		private string _Argument;
		
		private System.Nullable<bool> _Highlight;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<EmployeeAdviceButton> _EmployeeAdviceButtons;
		
		private EntitySet<EmployeeAdviceLog> _EmployeeAdviceLogs;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeAdviceIdChanging(int value);
    partial void OnEmployeeAdviceIdChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeTypeChanging(int value);
    partial void OnEmployeeTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCallChanging(string value);
    partial void OnCallChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnAppImageIdChanging(System.Nullable<int> value);
    partial void OnAppImageIdChanged();
    partial void OnPictureNameChanging(string value);
    partial void OnPictureNameChanged();
    partial void OnArgumentChanging(string value);
    partial void OnArgumentChanged();
    partial void OnHighlightChanging(System.Nullable<bool> value);
    partial void OnHighlightChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EmployeeAdvice()
		{
			this._EmployeeAdviceButtons = new EntitySet<EmployeeAdviceButton>(new Action<EmployeeAdviceButton>(this.attach_EmployeeAdviceButtons), new Action<EmployeeAdviceButton>(this.detach_EmployeeAdviceButtons));
			this._EmployeeAdviceLogs = new EntitySet<EmployeeAdviceLog>(new Action<EmployeeAdviceLog>(this.attach_EmployeeAdviceLogs), new Action<EmployeeAdviceLog>(this.detach_EmployeeAdviceLogs));
			this._AppImage = default(EntityRef<AppImage>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAdviceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeAdviceId
		{
			get
			{
				return this._EmployeeAdviceId;
			}
			set
			{
				if ((this._EmployeeAdviceId != value))
				{
					this.OnEmployeeAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAdviceId = value;
					this.SendPropertyChanged("EmployeeAdviceId");
					this.OnEmployeeAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeType", DbType="Int NOT NULL")]
		public int EmployeeType
		{
			get
			{
				return this._EmployeeType;
			}
			set
			{
				if ((this._EmployeeType != value))
				{
					this.OnEmployeeTypeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeType = value;
					this.SendPropertyChanged("EmployeeType");
					this.OnEmployeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Call
		{
			get
			{
				return this._Call;
			}
			set
			{
				if ((this._Call != value))
				{
					this.OnCallChanging(value);
					this.SendPropertyChanging();
					this._Call = value;
					this.SendPropertyChanged("Call");
					this.OnCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageId", DbType="Int")]
		public System.Nullable<int> AppImageId
		{
			get
			{
				return this._AppImageId;
			}
			set
			{
				if ((this._AppImageId != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIdChanging(value);
					this.SendPropertyChanging();
					this._AppImageId = value;
					this.SendPropertyChanged("AppImageId");
					this.OnAppImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureName", DbType="VarChar(200)")]
		public string PictureName
		{
			get
			{
				return this._PictureName;
			}
			set
			{
				if ((this._PictureName != value))
				{
					this.OnPictureNameChanging(value);
					this.SendPropertyChanging();
					this._PictureName = value;
					this.SendPropertyChanged("PictureName");
					this.OnPictureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Argument", DbType="VarChar(50)")]
		public string Argument
		{
			get
			{
				return this._Argument;
			}
			set
			{
				if ((this._Argument != value))
				{
					this.OnArgumentChanging(value);
					this.SendPropertyChanging();
					this._Argument = value;
					this.SendPropertyChanged("Argument");
					this.OnArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Highlight", DbType="Bit")]
		public System.Nullable<bool> Highlight
		{
			get
			{
				return this._Highlight;
			}
			set
			{
				if ((this._Highlight != value))
				{
					this.OnHighlightChanging(value);
					this.SendPropertyChanging();
					this._Highlight = value;
					this.SendPropertyChanged("Highlight");
					this.OnHighlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeAdvice_EmployeeAdviceButton", Storage="_EmployeeAdviceButtons", ThisKey="EmployeeAdviceId", OtherKey="EmployeeAdviceId")]
		public EntitySet<EmployeeAdviceButton> EmployeeAdviceButtons
		{
			get
			{
				return this._EmployeeAdviceButtons;
			}
			set
			{
				this._EmployeeAdviceButtons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeAdvice_EmployeeAdviceLog", Storage="_EmployeeAdviceLogs", ThisKey="EmployeeAdviceId", OtherKey="EmployeeAdviceId")]
		public EntitySet<EmployeeAdviceLog> EmployeeAdviceLogs
		{
			get
			{
				return this._EmployeeAdviceLogs;
			}
			set
			{
				this._EmployeeAdviceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_EmployeeAdvice", Storage="_AppImage", ThisKey="AppImageId", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.EmployeeAdvices.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.EmployeeAdvices.Add(this);
						this._AppImageId = value.AppImageID;
					}
					else
					{
						this._AppImageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeAdvice", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeAdvices.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeAdvices.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeAdviceButtons(EmployeeAdviceButton entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeAdvice = this;
		}
		
		private void detach_EmployeeAdviceButtons(EmployeeAdviceButton entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeAdvice = null;
		}
		
		private void attach_EmployeeAdviceLogs(EmployeeAdviceLog entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeAdvice = this;
		}
		
		private void detach_EmployeeAdviceLogs(EmployeeAdviceLog entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeAdvice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAdviceButton")]
	public partial class EmployeeAdviceButton : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeAdviceId;
		
		private int _ButtonId;
		
		private string _Text;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<EmployeeAdvice> _EmployeeAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeAdviceIdChanging(int value);
    partial void OnEmployeeAdviceIdChanged();
    partial void OnButtonIdChanging(int value);
    partial void OnButtonIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EmployeeAdviceButton()
		{
			this._EmployeeAdvice = default(EntityRef<EmployeeAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAdviceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeAdviceId
		{
			get
			{
				return this._EmployeeAdviceId;
			}
			set
			{
				if ((this._EmployeeAdviceId != value))
				{
					if (this._EmployeeAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAdviceId = value;
					this.SendPropertyChanged("EmployeeAdviceId");
					this.OnEmployeeAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ButtonId
		{
			get
			{
				return this._ButtonId;
			}
			set
			{
				if ((this._ButtonId != value))
				{
					this.OnButtonIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonId = value;
					this.SendPropertyChanged("ButtonId");
					this.OnButtonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(50)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeAdvice_EmployeeAdviceButton", Storage="_EmployeeAdvice", ThisKey="EmployeeAdviceId", OtherKey="EmployeeAdviceId", IsForeignKey=true)]
		public EmployeeAdvice EmployeeAdvice
		{
			get
			{
				return this._EmployeeAdvice.Entity;
			}
			set
			{
				EmployeeAdvice previousValue = this._EmployeeAdvice.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeAdvice.Entity = null;
						previousValue.EmployeeAdviceButtons.Remove(this);
					}
					this._EmployeeAdvice.Entity = value;
					if ((value != null))
					{
						value.EmployeeAdviceButtons.Add(this);
						this._EmployeeAdviceId = value.EmployeeAdviceId;
					}
					else
					{
						this._EmployeeAdviceId = default(int);
					}
					this.SendPropertyChanged("EmployeeAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAdviceLog")]
	public partial class EmployeeAdviceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeAdviceLogId;
		
		private int _EmployeeID;
		
		private int _EmployeeAdviceId;
		
		private int _ButtonId;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<EmployeeAdvice> _EmployeeAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeAdviceLogIdChanging(int value);
    partial void OnEmployeeAdviceLogIdChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeAdviceIdChanging(int value);
    partial void OnEmployeeAdviceIdChanged();
    partial void OnButtonIdChanging(int value);
    partial void OnButtonIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EmployeeAdviceLog()
		{
			this._EmployeeAdvice = default(EntityRef<EmployeeAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAdviceLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeAdviceLogId
		{
			get
			{
				return this._EmployeeAdviceLogId;
			}
			set
			{
				if ((this._EmployeeAdviceLogId != value))
				{
					this.OnEmployeeAdviceLogIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAdviceLogId = value;
					this.SendPropertyChanged("EmployeeAdviceLogId");
					this.OnEmployeeAdviceLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAdviceId", DbType="Int NOT NULL")]
		public int EmployeeAdviceId
		{
			get
			{
				return this._EmployeeAdviceId;
			}
			set
			{
				if ((this._EmployeeAdviceId != value))
				{
					if (this._EmployeeAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAdviceId = value;
					this.SendPropertyChanged("EmployeeAdviceId");
					this.OnEmployeeAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonId", DbType="Int NOT NULL")]
		public int ButtonId
		{
			get
			{
				return this._ButtonId;
			}
			set
			{
				if ((this._ButtonId != value))
				{
					this.OnButtonIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonId = value;
					this.SendPropertyChanged("ButtonId");
					this.OnButtonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeAdvice_EmployeeAdviceLog", Storage="_EmployeeAdvice", ThisKey="EmployeeAdviceId", OtherKey="EmployeeAdviceId", IsForeignKey=true)]
		public EmployeeAdvice EmployeeAdvice
		{
			get
			{
				return this._EmployeeAdvice.Entity;
			}
			set
			{
				EmployeeAdvice previousValue = this._EmployeeAdvice.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeAdvice.Entity = null;
						previousValue.EmployeeAdviceLogs.Remove(this);
					}
					this._EmployeeAdvice.Entity = value;
					if ((value != null))
					{
						value.EmployeeAdviceLogs.Add(this);
						this._EmployeeAdviceId = value.EmployeeAdviceId;
					}
					else
					{
						this._EmployeeAdviceId = default(int);
					}
					this.SendPropertyChanged("EmployeeAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDevice")]
	public partial class EmployeeDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private int _DeviceID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Device> _Device;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EmployeeDevice()
		{
			this._Device = default(EntityRef<Device>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_EmployeeDevice", Storage="_Device", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.EmployeeDevices.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.EmployeeDevices.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(int);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeDevice", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeDevices.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeDevices.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Magnitude")]
	public partial class Magnitude : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MagnitudeId;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<UnitMeasure> _UnitMeasures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagnitudeIdChanging(int value);
    partial void OnMagnitudeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Magnitude()
		{
			this._UnitMeasures = new EntitySet<UnitMeasure>(new Action<UnitMeasure>(this.attach_UnitMeasures), new Action<UnitMeasure>(this.detach_UnitMeasures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagnitudeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MagnitudeId
		{
			get
			{
				return this._MagnitudeId;
			}
			set
			{
				if ((this._MagnitudeId != value))
				{
					this.OnMagnitudeIdChanging(value);
					this.SendPropertyChanging();
					this._MagnitudeId = value;
					this.SendPropertyChanged("MagnitudeId");
					this.OnMagnitudeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magnitude_UnitMeasure", Storage="_UnitMeasures", ThisKey="MagnitudeId", OtherKey="MagnitudeId")]
		public EntitySet<UnitMeasure> UnitMeasures
		{
			get
			{
				return this._UnitMeasures;
			}
			set
			{
				this._UnitMeasures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnitMeasures(UnitMeasure entity)
		{
			this.SendPropertyChanging();
			entity.Magnitude = this;
		}
		
		private void detach_UnitMeasures(UnitMeasure entity)
		{
			this.SendPropertyChanging();
			entity.Magnitude = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meter")]
	public partial class Meter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeterId;
		
		private string _Name;
		
		private bool _Enable;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<MeterCategory> _MeterCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeterIdChanging(int value);
    partial void OnMeterIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Meter()
		{
			this._MeterCategories = new EntitySet<MeterCategory>(new Action<MeterCategory>(this.attach_MeterCategories), new Action<MeterCategory>(this.detach_MeterCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeterId
		{
			get
			{
				return this._MeterId;
			}
			set
			{
				if ((this._MeterId != value))
				{
					this.OnMeterIdChanging(value);
					this.SendPropertyChanging();
					this._MeterId = value;
					this.SendPropertyChanged("MeterId");
					this.OnMeterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
		public bool Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meter_MeterCategory", Storage="_MeterCategories", ThisKey="MeterId", OtherKey="MeterId")]
		public EntitySet<MeterCategory> MeterCategories
		{
			get
			{
				return this._MeterCategories;
			}
			set
			{
				this._MeterCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeterCategories(MeterCategory entity)
		{
			this.SendPropertyChanging();
			entity.Meter = this;
		}
		
		private void detach_MeterCategories(MeterCategory entity)
		{
			this.SendPropertyChanging();
			entity.Meter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeterCategory")]
	public partial class MeterCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeterCategoryId;
		
		private int _MeterId;
		
		private string _Name;
		
		private string _Description;
		
		private int _Sort;
		
		private System.Nullable<double> _ManConsum;
		
		private System.Nullable<double> _WomanConsum;
		
		private System.Nullable<double> _ChildConsum;
		
		private System.Nullable<int> _UnitMeasureId;
		
		private bool _Enable;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<MeterCategoryProduct> _MeterCategoryProducts;
		
		private EntityRef<Meter> _Meter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeterCategoryIdChanging(int value);
    partial void OnMeterCategoryIdChanged();
    partial void OnMeterIdChanging(int value);
    partial void OnMeterIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnManConsumChanging(System.Nullable<double> value);
    partial void OnManConsumChanged();
    partial void OnWomanConsumChanging(System.Nullable<double> value);
    partial void OnWomanConsumChanged();
    partial void OnChildConsumChanging(System.Nullable<double> value);
    partial void OnChildConsumChanged();
    partial void OnUnitMeasureIdChanging(System.Nullable<int> value);
    partial void OnUnitMeasureIdChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public MeterCategory()
		{
			this._MeterCategoryProducts = new EntitySet<MeterCategoryProduct>(new Action<MeterCategoryProduct>(this.attach_MeterCategoryProducts), new Action<MeterCategoryProduct>(this.detach_MeterCategoryProducts));
			this._Meter = default(EntityRef<Meter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeterCategoryId
		{
			get
			{
				return this._MeterCategoryId;
			}
			set
			{
				if ((this._MeterCategoryId != value))
				{
					this.OnMeterCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._MeterCategoryId = value;
					this.SendPropertyChanged("MeterCategoryId");
					this.OnMeterCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterId", DbType="Int NOT NULL")]
		public int MeterId
		{
			get
			{
				return this._MeterId;
			}
			set
			{
				if ((this._MeterId != value))
				{
					if (this._Meter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeterIdChanging(value);
					this.SendPropertyChanging();
					this._MeterId = value;
					this.SendPropertyChanged("MeterId");
					this.OnMeterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManConsum", DbType="Float")]
		public System.Nullable<double> ManConsum
		{
			get
			{
				return this._ManConsum;
			}
			set
			{
				if ((this._ManConsum != value))
				{
					this.OnManConsumChanging(value);
					this.SendPropertyChanging();
					this._ManConsum = value;
					this.SendPropertyChanged("ManConsum");
					this.OnManConsumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WomanConsum", DbType="Float")]
		public System.Nullable<double> WomanConsum
		{
			get
			{
				return this._WomanConsum;
			}
			set
			{
				if ((this._WomanConsum != value))
				{
					this.OnWomanConsumChanging(value);
					this.SendPropertyChanging();
					this._WomanConsum = value;
					this.SendPropertyChanged("WomanConsum");
					this.OnWomanConsumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildConsum", DbType="Float")]
		public System.Nullable<double> ChildConsum
		{
			get
			{
				return this._ChildConsum;
			}
			set
			{
				if ((this._ChildConsum != value))
				{
					this.OnChildConsumChanging(value);
					this.SendPropertyChanging();
					this._ChildConsum = value;
					this.SendPropertyChanged("ChildConsum");
					this.OnChildConsumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureId", DbType="Int")]
		public System.Nullable<int> UnitMeasureId
		{
			get
			{
				return this._UnitMeasureId;
			}
			set
			{
				if ((this._UnitMeasureId != value))
				{
					this.OnUnitMeasureIdChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureId = value;
					this.SendPropertyChanged("UnitMeasureId");
					this.OnUnitMeasureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
		public bool Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeterCategory_MeterCategoryProduct", Storage="_MeterCategoryProducts", ThisKey="MeterCategoryId", OtherKey="MeterCategoryId")]
		public EntitySet<MeterCategoryProduct> MeterCategoryProducts
		{
			get
			{
				return this._MeterCategoryProducts;
			}
			set
			{
				this._MeterCategoryProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meter_MeterCategory", Storage="_Meter", ThisKey="MeterId", OtherKey="MeterId", IsForeignKey=true)]
		public Meter Meter
		{
			get
			{
				return this._Meter.Entity;
			}
			set
			{
				Meter previousValue = this._Meter.Entity;
				if (((previousValue != value) 
							|| (this._Meter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meter.Entity = null;
						previousValue.MeterCategories.Remove(this);
					}
					this._Meter.Entity = value;
					if ((value != null))
					{
						value.MeterCategories.Add(this);
						this._MeterId = value.MeterId;
					}
					else
					{
						this._MeterId = default(int);
					}
					this.SendPropertyChanged("Meter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeterCategoryProducts(MeterCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.MeterCategory = this;
		}
		
		private void detach_MeterCategoryProducts(MeterCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.MeterCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeterCategoryProduct")]
	public partial class MeterCategoryProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeterCategoryId;
		
		private int _ProductID;
		
		private bool _Enable;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<MeterCategory> _MeterCategory;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeterCategoryIdChanging(int value);
    partial void OnMeterCategoryIdChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public MeterCategoryProduct()
		{
			this._MeterCategory = default(EntityRef<MeterCategory>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MeterCategoryId
		{
			get
			{
				return this._MeterCategoryId;
			}
			set
			{
				if ((this._MeterCategoryId != value))
				{
					if (this._MeterCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeterCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._MeterCategoryId = value;
					this.SendPropertyChanged("MeterCategoryId");
					this.OnMeterCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
		public bool Enable
		{
			get
			{
				return this._Enable;
			}
			set
			{
				if ((this._Enable != value))
				{
					this.OnEnableChanging(value);
					this.SendPropertyChanging();
					this._Enable = value;
					this.SendPropertyChanged("Enable");
					this.OnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeterCategory_MeterCategoryProduct", Storage="_MeterCategory", ThisKey="MeterCategoryId", OtherKey="MeterCategoryId", IsForeignKey=true)]
		public MeterCategory MeterCategory
		{
			get
			{
				return this._MeterCategory.Entity;
			}
			set
			{
				MeterCategory previousValue = this._MeterCategory.Entity;
				if (((previousValue != value) 
							|| (this._MeterCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeterCategory.Entity = null;
						previousValue.MeterCategoryProducts.Remove(this);
					}
					this._MeterCategory.Entity = value;
					if ((value != null))
					{
						value.MeterCategoryProducts.Add(this);
						this._MeterCategoryId = value.MeterCategoryId;
					}
					else
					{
						this._MeterCategoryId = default(int);
					}
					this.SendPropertyChanged("MeterCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MeterCategoryProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.MeterCategoryProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.MeterCategoryProducts.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyOrder")]
	public partial class MyOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MyOrderID;
		
		private System.Nullable<int> _BuyerID;
		
		private System.Nullable<int> _SupplierID;
		
		private System.Nullable<int> _PromotionID;
		
		private System.Nullable<int> _MyOrderType;
		
		private string _ReceiptCode;
		
		private string _Description;
		
		private string _Product;
		
		private bool _RepeatOrder;
		
		private System.Nullable<int> _Sort;
		
		private System.Nullable<bool> _PrintInvoice;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntitySet<MyOrderProduct> _MyOrderProducts;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<Promotion> _Promotion;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMyOrderIDChanging(int value);
    partial void OnMyOrderIDChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnPromotionIDChanging(System.Nullable<int> value);
    partial void OnPromotionIDChanged();
    partial void OnMyOrderTypeChanging(System.Nullable<int> value);
    partial void OnMyOrderTypeChanged();
    partial void OnReceiptCodeChanging(string value);
    partial void OnReceiptCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnRepeatOrderChanging(bool value);
    partial void OnRepeatOrderChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnPrintInvoiceChanging(System.Nullable<bool> value);
    partial void OnPrintInvoiceChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public MyOrder()
		{
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._MyOrderProducts = new EntitySet<MyOrderProduct>(new Action<MyOrderProduct>(this.attach_MyOrderProducts), new Action<MyOrderProduct>(this.detach_MyOrderProducts));
			this._Buyer = default(EntityRef<Buyer>);
			this._Promotion = default(EntityRef<Promotion>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					this.OnMyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MyOrderID = value;
					this.SendPropertyChanged("MyOrderID");
					this.OnMyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderType", DbType="Int")]
		public System.Nullable<int> MyOrderType
		{
			get
			{
				return this._MyOrderType;
			}
			set
			{
				if ((this._MyOrderType != value))
				{
					this.OnMyOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._MyOrderType = value;
					this.SendPropertyChanged("MyOrderType");
					this.OnMyOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptCode", DbType="VarChar(50)")]
		public string ReceiptCode
		{
			get
			{
				return this._ReceiptCode;
			}
			set
			{
				if ((this._ReceiptCode != value))
				{
					this.OnReceiptCodeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptCode = value;
					this.SendPropertyChanged("ReceiptCode");
					this.OnReceiptCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="VarChar(100)")]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatOrder", DbType="Bit NOT NULL")]
		public bool RepeatOrder
		{
			get
			{
				return this._RepeatOrder;
			}
			set
			{
				if ((this._RepeatOrder != value))
				{
					this.OnRepeatOrderChanging(value);
					this.SendPropertyChanging();
					this._RepeatOrder = value;
					this.SendPropertyChanged("RepeatOrder");
					this.OnRepeatOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintInvoice", DbType="Bit")]
		public System.Nullable<bool> PrintInvoice
		{
			get
			{
				return this._PrintInvoice;
			}
			set
			{
				if ((this._PrintInvoice != value))
				{
					this.OnPrintInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintInvoice = value;
					this.SendPropertyChanged("PrintInvoice");
					this.OnPrintInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyOrder_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="MyOrderID", OtherKey="MyOrderID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyOrder_MyOrderProduct", Storage="_MyOrderProducts", ThisKey="MyOrderID", OtherKey="MyOrderID")]
		public EntitySet<MyOrderProduct> MyOrderProducts
		{
			get
			{
				return this._MyOrderProducts;
			}
			set
			{
				this._MyOrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_MyOrder", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.MyOrders.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.MyOrders.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_MyOrder", Storage="_Promotion", ThisKey="PromotionID", OtherKey="PromotionID", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.MyOrders.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.MyOrders.Add(this);
						this._PromotionID = value.PromotionID;
					}
					else
					{
						this._PromotionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_MyOrder", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.MyOrders.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.MyOrders.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.MyOrder = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.MyOrder = null;
		}
		
		private void attach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.MyOrder = this;
		}
		
		private void detach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.MyOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyOrderHistory")]
	public partial class MyOrderHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MyOrderHistoryID;
		
		private System.Nullable<int> _MyOrderID;
		
		private System.Nullable<int> _InteractionID;
		
		private System.Nullable<int> _NotificationID;
		
		private System.Nullable<int> _SellerID;
		
		private System.Nullable<int> _DealerID;
		
		private System.Nullable<int> _InteractorEmployeeId;
		
		private System.Nullable<int> _CustomerLocationID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _PayMode;
		
		private System.Nullable<int> _PaymentMethod;
		
		private System.Nullable<decimal> _ChangeOf;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _Observation;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<decimal> _ShippingCost;
		
		private System.Nullable<int> _TrackPointID;
		
		private System.Nullable<int> _AppImageID;
		
		private string _Receiver;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private string _CancelDescription;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<CustomerLocation> _CustomerLocation;
		
		private EntityRef<Dealer> _Dealer;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<MyOrder> _MyOrder;
		
		private EntityRef<Notification> _Notification;
		
		private EntityRef<Seller> _Seller;
		
		private EntityRef<TrackPoint> _TrackPoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMyOrderHistoryIDChanging(int value);
    partial void OnMyOrderHistoryIDChanged();
    partial void OnMyOrderIDChanging(System.Nullable<int> value);
    partial void OnMyOrderIDChanged();
    partial void OnInteractionIDChanging(System.Nullable<int> value);
    partial void OnInteractionIDChanged();
    partial void OnNotificationIDChanging(System.Nullable<int> value);
    partial void OnNotificationIDChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnDealerIDChanging(System.Nullable<int> value);
    partial void OnDealerIDChanged();
    partial void OnInteractorEmployeeIdChanging(System.Nullable<int> value);
    partial void OnInteractorEmployeeIdChanged();
    partial void OnCustomerLocationIDChanging(System.Nullable<int> value);
    partial void OnCustomerLocationIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnPayModeChanging(System.Nullable<int> value);
    partial void OnPayModeChanged();
    partial void OnPaymentMethodChanging(System.Nullable<int> value);
    partial void OnPaymentMethodChanged();
    partial void OnChangeOfChanging(System.Nullable<decimal> value);
    partial void OnChangeOfChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnShippingCostChanging(System.Nullable<decimal> value);
    partial void OnShippingCostChanged();
    partial void OnTrackPointIDChanging(System.Nullable<int> value);
    partial void OnTrackPointIDChanged();
    partial void OnAppImageIDChanging(System.Nullable<int> value);
    partial void OnAppImageIDChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCancelDescriptionChanging(string value);
    partial void OnCancelDescriptionChanged();
    #endregion
		
		public MyOrderHistory()
		{
			this._AppImage = default(EntityRef<AppImage>);
			this._CustomerLocation = default(EntityRef<CustomerLocation>);
			this._Dealer = default(EntityRef<Dealer>);
			this._Employee = default(EntityRef<Employee>);
			this._MyOrder = default(EntityRef<MyOrder>);
			this._Notification = default(EntityRef<Notification>);
			this._Seller = default(EntityRef<Seller>);
			this._TrackPoint = default(EntityRef<TrackPoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MyOrderHistoryID
		{
			get
			{
				return this._MyOrderHistoryID;
			}
			set
			{
				if ((this._MyOrderHistoryID != value))
				{
					this.OnMyOrderHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._MyOrderHistoryID = value;
					this.SendPropertyChanged("MyOrderHistoryID");
					this.OnMyOrderHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int")]
		public System.Nullable<int> MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					if (this._MyOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MyOrderID = value;
					this.SendPropertyChanged("MyOrderID");
					this.OnMyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteractionID", DbType="Int")]
		public System.Nullable<int> InteractionID
		{
			get
			{
				return this._InteractionID;
			}
			set
			{
				if ((this._InteractionID != value))
				{
					this.OnInteractionIDChanging(value);
					this.SendPropertyChanging();
					this._InteractionID = value;
					this.SendPropertyChanged("InteractionID");
					this.OnInteractionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", DbType="Int")]
		public System.Nullable<int> NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					if (this._Notification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int")]
		public System.Nullable<int> DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					if (this._Dealer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteractorEmployeeId", DbType="Int")]
		public System.Nullable<int> InteractorEmployeeId
		{
			get
			{
				return this._InteractorEmployeeId;
			}
			set
			{
				if ((this._InteractorEmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInteractorEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._InteractorEmployeeId = value;
					this.SendPropertyChanged("InteractorEmployeeId");
					this.OnInteractorEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLocationID", DbType="Int")]
		public System.Nullable<int> CustomerLocationID
		{
			get
			{
				return this._CustomerLocationID;
			}
			set
			{
				if ((this._CustomerLocationID != value))
				{
					if (this._CustomerLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerLocationIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerLocationID = value;
					this.SendPropertyChanged("CustomerLocationID");
					this.OnCustomerLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMode", DbType="Int")]
		public System.Nullable<int> PayMode
		{
			get
			{
				return this._PayMode;
			}
			set
			{
				if ((this._PayMode != value))
				{
					this.OnPayModeChanging(value);
					this.SendPropertyChanging();
					this._PayMode = value;
					this.SendPropertyChanged("PayMode");
					this.OnPayModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="Int")]
		public System.Nullable<int> PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this.OnPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethod = value;
					this.SendPropertyChanged("PaymentMethod");
					this.OnPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeOf", DbType="Money")]
		public System.Nullable<decimal> ChangeOf
		{
			get
			{
				return this._ChangeOf;
			}
			set
			{
				if ((this._ChangeOf != value))
				{
					this.OnChangeOfChanging(value);
					this.SendPropertyChanging();
					this._ChangeOf = value;
					this.SendPropertyChanged("ChangeOf");
					this.OnChangeOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCost", DbType="Money")]
		public System.Nullable<decimal> ShippingCost
		{
			get
			{
				return this._ShippingCost;
			}
			set
			{
				if ((this._ShippingCost != value))
				{
					this.OnShippingCostChanging(value);
					this.SendPropertyChanging();
					this._ShippingCost = value;
					this.SendPropertyChanged("ShippingCost");
					this.OnShippingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointID", DbType="Int")]
		public System.Nullable<int> TrackPointID
		{
			get
			{
				return this._TrackPointID;
			}
			set
			{
				if ((this._TrackPointID != value))
				{
					if (this._TrackPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackPointIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointID = value;
					this.SendPropertyChanged("TrackPointID");
					this.OnTrackPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int")]
		public System.Nullable<int> AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="VarChar(100)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDescription", DbType="VarChar(300)")]
		public string CancelDescription
		{
			get
			{
				return this._CancelDescription;
			}
			set
			{
				if ((this._CancelDescription != value))
				{
					this.OnCancelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CancelDescription = value;
					this.SendPropertyChanged("CancelDescription");
					this.OnCancelDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_MyOrderHistory", Storage="_AppImage", ThisKey="AppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._AppImageID = value.AppImageID;
					}
					else
					{
						this._AppImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_MyOrderHistory", Storage="_CustomerLocation", ThisKey="CustomerLocationID", OtherKey="CustomerLocationID", IsForeignKey=true)]
		public CustomerLocation CustomerLocation
		{
			get
			{
				return this._CustomerLocation.Entity;
			}
			set
			{
				CustomerLocation previousValue = this._CustomerLocation.Entity;
				if (((previousValue != value) 
							|| (this._CustomerLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerLocation.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._CustomerLocation.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._CustomerLocationID = value.CustomerLocationID;
					}
					else
					{
						this._CustomerLocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dealer_MyOrderHistory", Storage="_Dealer", ThisKey="DealerID", OtherKey="DealerID", IsForeignKey=true)]
		public Dealer Dealer
		{
			get
			{
				return this._Dealer.Entity;
			}
			set
			{
				Dealer previousValue = this._Dealer.Entity;
				if (((previousValue != value) 
							|| (this._Dealer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dealer.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._Dealer.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._DealerID = value.DealerID;
					}
					else
					{
						this._DealerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dealer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_MyOrderHistory", Storage="_Employee", ThisKey="InteractorEmployeeId", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._InteractorEmployeeId = value.EmployeeID;
					}
					else
					{
						this._InteractorEmployeeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyOrder_MyOrderHistory", Storage="_MyOrder", ThisKey="MyOrderID", OtherKey="MyOrderID", IsForeignKey=true)]
		public MyOrder MyOrder
		{
			get
			{
				return this._MyOrder.Entity;
			}
			set
			{
				MyOrder previousValue = this._MyOrder.Entity;
				if (((previousValue != value) 
							|| (this._MyOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MyOrder.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._MyOrder.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._MyOrderID = value.MyOrderID;
					}
					else
					{
						this._MyOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MyOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notification_MyOrderHistory", Storage="_Notification", ThisKey="NotificationID", OtherKey="NotificationID", IsForeignKey=true)]
		public Notification Notification
		{
			get
			{
				return this._Notification.Entity;
			}
			set
			{
				Notification previousValue = this._Notification.Entity;
				if (((previousValue != value) 
							|| (this._Notification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Notification.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._Notification.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._NotificationID = value.NotificationID;
					}
					else
					{
						this._NotificationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Notification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_MyOrderHistory", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_MyOrderHistory", Storage="_TrackPoint", ThisKey="TrackPointID", OtherKey="TrackPointID", IsForeignKey=true)]
		public TrackPoint TrackPoint
		{
			get
			{
				return this._TrackPoint.Entity;
			}
			set
			{
				TrackPoint previousValue = this._TrackPoint.Entity;
				if (((previousValue != value) 
							|| (this._TrackPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackPoint.Entity = null;
						previousValue.MyOrderHistories.Remove(this);
					}
					this._TrackPoint.Entity = value;
					if ((value != null))
					{
						value.MyOrderHistories.Add(this);
						this._TrackPointID = value.TrackPointID;
					}
					else
					{
						this._TrackPointID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrackPoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyOrderProduct")]
	public partial class MyOrderProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MyOrderID;
		
		private int _ProductID;
		
		private System.Nullable<int> _PriceListID;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.Nullable<bool> _InOffer;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _Discount;
		
		private System.Nullable<int> _QuantityInitial;
		
		private System.Nullable<int> _DiscountInitial;
		
		private System.Nullable<bool> _IsAdded;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<MyOrder> _MyOrder;
		
		private EntityRef<PriceListDetail> _PriceListDetail;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMyOrderIDChanging(int value);
    partial void OnMyOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnPriceListIDChanging(System.Nullable<int> value);
    partial void OnPriceListIDChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnSalePriceChanging(System.Nullable<decimal> value);
    partial void OnSalePriceChanged();
    partial void OnInOfferChanging(System.Nullable<bool> value);
    partial void OnInOfferChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnDiscountChanging(System.Nullable<int> value);
    partial void OnDiscountChanged();
    partial void OnQuantityInitialChanging(System.Nullable<int> value);
    partial void OnQuantityInitialChanged();
    partial void OnDiscountInitialChanging(System.Nullable<int> value);
    partial void OnDiscountInitialChanged();
    partial void OnIsAddedChanging(System.Nullable<bool> value);
    partial void OnIsAddedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public MyOrderProduct()
		{
			this._MyOrder = default(EntityRef<MyOrder>);
			this._PriceListDetail = default(EntityRef<PriceListDetail>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					if (this._MyOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MyOrderID = value;
					this.SendPropertyChanged("MyOrderID");
					this.OnMyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if ((this._PriceListDetail.HasLoadedOrAssignedValue || this._Product.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListID", DbType="Int")]
		public System.Nullable<int> PriceListID
		{
			get
			{
				return this._PriceListID;
			}
			set
			{
				if ((this._PriceListID != value))
				{
					if (this._PriceListDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListIDChanging(value);
					this.SendPropertyChanging();
					this._PriceListID = value;
					this.SendPropertyChanged("PriceListID");
					this.OnPriceListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Money")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOffer", DbType="Bit")]
		public System.Nullable<bool> InOffer
		{
			get
			{
				return this._InOffer;
			}
			set
			{
				if ((this._InOffer != value))
				{
					this.OnInOfferChanging(value);
					this.SendPropertyChanging();
					this._InOffer = value;
					this.SendPropertyChanged("InOffer");
					this.OnInOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityInitial", DbType="Int")]
		public System.Nullable<int> QuantityInitial
		{
			get
			{
				return this._QuantityInitial;
			}
			set
			{
				if ((this._QuantityInitial != value))
				{
					this.OnQuantityInitialChanging(value);
					this.SendPropertyChanging();
					this._QuantityInitial = value;
					this.SendPropertyChanged("QuantityInitial");
					this.OnQuantityInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInitial", DbType="Int")]
		public System.Nullable<int> DiscountInitial
		{
			get
			{
				return this._DiscountInitial;
			}
			set
			{
				if ((this._DiscountInitial != value))
				{
					this.OnDiscountInitialChanging(value);
					this.SendPropertyChanging();
					this._DiscountInitial = value;
					this.SendPropertyChanged("DiscountInitial");
					this.OnDiscountInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdded", DbType="Bit")]
		public System.Nullable<bool> IsAdded
		{
			get
			{
				return this._IsAdded;
			}
			set
			{
				if ((this._IsAdded != value))
				{
					this.OnIsAddedChanging(value);
					this.SendPropertyChanging();
					this._IsAdded = value;
					this.SendPropertyChanged("IsAdded");
					this.OnIsAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MyOrder_MyOrderProduct", Storage="_MyOrder", ThisKey="MyOrderID", OtherKey="MyOrderID", IsForeignKey=true)]
		public MyOrder MyOrder
		{
			get
			{
				return this._MyOrder.Entity;
			}
			set
			{
				MyOrder previousValue = this._MyOrder.Entity;
				if (((previousValue != value) 
							|| (this._MyOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MyOrder.Entity = null;
						previousValue.MyOrderProducts.Remove(this);
					}
					this._MyOrder.Entity = value;
					if ((value != null))
					{
						value.MyOrderProducts.Add(this);
						this._MyOrderID = value.MyOrderID;
					}
					else
					{
						this._MyOrderID = default(int);
					}
					this.SendPropertyChanged("MyOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListDetail_MyOrderProduct", Storage="_PriceListDetail", ThisKey="PriceListID,ProductID", OtherKey="PriceListID,ProductID", IsForeignKey=true)]
		public PriceListDetail PriceListDetail
		{
			get
			{
				return this._PriceListDetail.Entity;
			}
			set
			{
				PriceListDetail previousValue = this._PriceListDetail.Entity;
				if (((previousValue != value) 
							|| (this._PriceListDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceListDetail.Entity = null;
						previousValue.MyOrderProducts.Remove(this);
					}
					this._PriceListDetail.Entity = value;
					if ((value != null))
					{
						value.MyOrderProducts.Add(this);
						this._PriceListID = value.PriceListID;
						this._ProductID = value.ProductID;
					}
					else
					{
						this._PriceListID = default(Nullable<int>);
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("PriceListDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MyOrderProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.MyOrderProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.MyOrderProducts.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private int _AppID;
		
		private System.Nullable<int> _BuyerID;
		
		private int _Type;
		
		private string _DeviceOS;
		
		private string _Channel;
		
		private string _ContentTitle;
		
		private string _ContentText;
		
		private int _LargeIcon;
		
		private int _SmallIcon;
		
		private int _Activity;
		
		private string _Argument;
		
		private System.DateTime _DateToSend;
		
		private System.Nullable<int> _Menu;
		
		private bool _Send;
		
		private string _Data;
		
		private System.Nullable<int> _Status;
		
		private bool _IsRead;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntityRef<App> _App;
		
		private EntityRef<Buyer> _Buyer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDeviceOSChanging(string value);
    partial void OnDeviceOSChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    partial void OnContentTitleChanging(string value);
    partial void OnContentTitleChanged();
    partial void OnContentTextChanging(string value);
    partial void OnContentTextChanged();
    partial void OnLargeIconChanging(int value);
    partial void OnLargeIconChanged();
    partial void OnSmallIconChanging(int value);
    partial void OnSmallIconChanged();
    partial void OnActivityChanging(int value);
    partial void OnActivityChanged();
    partial void OnArgumentChanging(string value);
    partial void OnArgumentChanged();
    partial void OnDateToSendChanging(System.DateTime value);
    partial void OnDateToSendChanged();
    partial void OnMenuChanging(System.Nullable<int> value);
    partial void OnMenuChanged();
    partial void OnSendChanging(bool value);
    partial void OnSendChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Notification()
		{
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._App = default(EntityRef<App>);
			this._Buyer = default(EntityRef<Buyer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL")]
		public int AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					if (this._App.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceOS", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceOS
		{
			get
			{
				return this._DeviceOS;
			}
			set
			{
				if ((this._DeviceOS != value))
				{
					this.OnDeviceOSChanging(value);
					this.SendPropertyChanging();
					this._DeviceOS = value;
					this.SendPropertyChanged("DeviceOS");
					this.OnDeviceOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="VarChar(200)")]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTitle", DbType="VarChar(255)")]
		public string ContentTitle
		{
			get
			{
				return this._ContentTitle;
			}
			set
			{
				if ((this._ContentTitle != value))
				{
					this.OnContentTitleChanging(value);
					this.SendPropertyChanging();
					this._ContentTitle = value;
					this.SendPropertyChanged("ContentTitle");
					this.OnContentTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ContentText
		{
			get
			{
				return this._ContentText;
			}
			set
			{
				if ((this._ContentText != value))
				{
					this.OnContentTextChanging(value);
					this.SendPropertyChanging();
					this._ContentText = value;
					this.SendPropertyChanged("ContentText");
					this.OnContentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeIcon", DbType="Int NOT NULL")]
		public int LargeIcon
		{
			get
			{
				return this._LargeIcon;
			}
			set
			{
				if ((this._LargeIcon != value))
				{
					this.OnLargeIconChanging(value);
					this.SendPropertyChanging();
					this._LargeIcon = value;
					this.SendPropertyChanged("LargeIcon");
					this.OnLargeIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallIcon", DbType="Int NOT NULL")]
		public int SmallIcon
		{
			get
			{
				return this._SmallIcon;
			}
			set
			{
				if ((this._SmallIcon != value))
				{
					this.OnSmallIconChanging(value);
					this.SendPropertyChanging();
					this._SmallIcon = value;
					this.SendPropertyChanged("SmallIcon");
					this.OnSmallIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="Int NOT NULL")]
		public int Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Argument", DbType="VarChar(200)")]
		public string Argument
		{
			get
			{
				return this._Argument;
			}
			set
			{
				if ((this._Argument != value))
				{
					this.OnArgumentChanging(value);
					this.SendPropertyChanging();
					this._Argument = value;
					this.SendPropertyChanged("Argument");
					this.OnArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToSend", DbType="DateTime NOT NULL")]
		public System.DateTime DateToSend
		{
			get
			{
				return this._DateToSend;
			}
			set
			{
				if ((this._DateToSend != value))
				{
					this.OnDateToSendChanging(value);
					this.SendPropertyChanging();
					this._DateToSend = value;
					this.SendPropertyChanged("DateToSend");
					this.OnDateToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Menu", DbType="Int")]
		public System.Nullable<int> Menu
		{
			get
			{
				return this._Menu;
			}
			set
			{
				if ((this._Menu != value))
				{
					this.OnMenuChanging(value);
					this.SendPropertyChanging();
					this._Menu = value;
					this.SendPropertyChanged("Menu");
					this.OnMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Send", DbType="Bit NOT NULL")]
		public bool Send
		{
			get
			{
				return this._Send;
			}
			set
			{
				if ((this._Send != value))
				{
					this.OnSendChanging(value);
					this.SendPropertyChanging();
					this._Send = value;
					this.SendPropertyChanged("Send");
					this.OnSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(255)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Notification_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="NotificationID", OtherKey="NotificationID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="App_Notification", Storage="_App", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
		public App App
		{
			get
			{
				return this._App.Entity;
			}
			set
			{
				App previousValue = this._App.Entity;
				if (((previousValue != value) 
							|| (this._App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._App.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._App.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._AppID = value.AppID;
					}
					else
					{
						this._AppID = default(int);
					}
					this.SendPropertyChanged("App");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Notification", Storage="_Buyer", ThisKey="BuyerID", OtherKey="BuyerID", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._BuyerID = value.BuyerID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Notification = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Notification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceList")]
	public partial class PriceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListID;
		
		private string _Name;
		
		private int _CustomerTypeID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<PriceListDetail> _PriceListDetails;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListIDChanging(int value);
    partial void OnPriceListIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCustomerTypeIDChanging(int value);
    partial void OnCustomerTypeIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PriceList()
		{
			this._PriceListDetails = new EntitySet<PriceListDetail>(new Action<PriceListDetail>(this.attach_PriceListDetails), new Action<PriceListDetail>(this.detach_PriceListDetails));
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PriceListID
		{
			get
			{
				return this._PriceListID;
			}
			set
			{
				if ((this._PriceListID != value))
				{
					this.OnPriceListIDChanging(value);
					this.SendPropertyChanging();
					this._PriceListID = value;
					this.SendPropertyChanged("PriceListID");
					this.OnPriceListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="Int NOT NULL")]
		public int CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceListDetail", Storage="_PriceListDetails", ThisKey="PriceListID", OtherKey="PriceListID")]
		public EntitySet<PriceListDetail> PriceListDetails
		{
			get
			{
				return this._PriceListDetails;
			}
			set
			{
				this._PriceListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_PriceList", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.PriceLists.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.PriceLists.Add(this);
						this._CustomerTypeID = value.CustomerTypeID;
					}
					else
					{
						this._CustomerTypeID = default(int);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PriceListDetails(PriceListDetail entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = this;
		}
		
		private void detach_PriceListDetails(PriceListDetail entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceListDetail")]
	public partial class PriceListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListID;
		
		private int _ProductID;
		
		private double _Margin;
		
		private decimal _SalePrice;
		
		private double _MarginDiscount;
		
		private System.Nullable<decimal> _DiscountPrice;
		
		private System.Nullable<decimal> _OfferPrice;
		
		private System.Nullable<int> _MinimumQuantity;
		
		private System.Nullable<int> _MaximumDiscount;
		
		private int _Status;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<CustomerVisitProduct> _CustomerVisitProducts;
		
		private EntitySet<MyOrderProduct> _MyOrderProducts;
		
		private EntityRef<PriceList> _PriceList;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListIDChanging(int value);
    partial void OnPriceListIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnMarginChanging(double value);
    partial void OnMarginChanged();
    partial void OnSalePriceChanging(decimal value);
    partial void OnSalePriceChanged();
    partial void OnMarginDiscountChanging(double value);
    partial void OnMarginDiscountChanged();
    partial void OnDiscountPriceChanging(System.Nullable<decimal> value);
    partial void OnDiscountPriceChanged();
    partial void OnOfferPriceChanging(System.Nullable<decimal> value);
    partial void OnOfferPriceChanged();
    partial void OnMinimumQuantityChanging(System.Nullable<int> value);
    partial void OnMinimumQuantityChanged();
    partial void OnMaximumDiscountChanging(System.Nullable<int> value);
    partial void OnMaximumDiscountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PriceListDetail()
		{
			this._CustomerVisitProducts = new EntitySet<CustomerVisitProduct>(new Action<CustomerVisitProduct>(this.attach_CustomerVisitProducts), new Action<CustomerVisitProduct>(this.detach_CustomerVisitProducts));
			this._MyOrderProducts = new EntitySet<MyOrderProduct>(new Action<MyOrderProduct>(this.attach_MyOrderProducts), new Action<MyOrderProduct>(this.detach_MyOrderProducts));
			this._PriceList = default(EntityRef<PriceList>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PriceListID
		{
			get
			{
				return this._PriceListID;
			}
			set
			{
				if ((this._PriceListID != value))
				{
					if (this._PriceList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListIDChanging(value);
					this.SendPropertyChanging();
					this._PriceListID = value;
					this.SendPropertyChanged("PriceListID");
					this.OnPriceListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Margin", DbType="Float NOT NULL")]
		public double Margin
		{
			get
			{
				return this._Margin;
			}
			set
			{
				if ((this._Margin != value))
				{
					this.OnMarginChanging(value);
					this.SendPropertyChanging();
					this._Margin = value;
					this.SendPropertyChanged("Margin");
					this.OnMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Money NOT NULL")]
		public decimal SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginDiscount", DbType="Float NOT NULL")]
		public double MarginDiscount
		{
			get
			{
				return this._MarginDiscount;
			}
			set
			{
				if ((this._MarginDiscount != value))
				{
					this.OnMarginDiscountChanging(value);
					this.SendPropertyChanging();
					this._MarginDiscount = value;
					this.SendPropertyChanged("MarginDiscount");
					this.OnMarginDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPrice", DbType="Money")]
		public System.Nullable<decimal> DiscountPrice
		{
			get
			{
				return this._DiscountPrice;
			}
			set
			{
				if ((this._DiscountPrice != value))
				{
					this.OnDiscountPriceChanging(value);
					this.SendPropertyChanging();
					this._DiscountPrice = value;
					this.SendPropertyChanged("DiscountPrice");
					this.OnDiscountPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferPrice", DbType="Money")]
		public System.Nullable<decimal> OfferPrice
		{
			get
			{
				return this._OfferPrice;
			}
			set
			{
				if ((this._OfferPrice != value))
				{
					this.OnOfferPriceChanging(value);
					this.SendPropertyChanging();
					this._OfferPrice = value;
					this.SendPropertyChanged("OfferPrice");
					this.OnOfferPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumQuantity", DbType="Int")]
		public System.Nullable<int> MinimumQuantity
		{
			get
			{
				return this._MinimumQuantity;
			}
			set
			{
				if ((this._MinimumQuantity != value))
				{
					this.OnMinimumQuantityChanging(value);
					this.SendPropertyChanging();
					this._MinimumQuantity = value;
					this.SendPropertyChanged("MinimumQuantity");
					this.OnMinimumQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumDiscount", DbType="Int")]
		public System.Nullable<int> MaximumDiscount
		{
			get
			{
				return this._MaximumDiscount;
			}
			set
			{
				if ((this._MaximumDiscount != value))
				{
					this.OnMaximumDiscountChanging(value);
					this.SendPropertyChanging();
					this._MaximumDiscount = value;
					this.SendPropertyChanged("MaximumDiscount");
					this.OnMaximumDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListDetail_CustomerVisitProduct", Storage="_CustomerVisitProducts", ThisKey="PriceListID,ProductID", OtherKey="PriceListID,ProductID")]
		public EntitySet<CustomerVisitProduct> CustomerVisitProducts
		{
			get
			{
				return this._CustomerVisitProducts;
			}
			set
			{
				this._CustomerVisitProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListDetail_MyOrderProduct", Storage="_MyOrderProducts", ThisKey="PriceListID,ProductID", OtherKey="PriceListID,ProductID")]
		public EntitySet<MyOrderProduct> MyOrderProducts
		{
			get
			{
				return this._MyOrderProducts;
			}
			set
			{
				this._MyOrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceListDetail", Storage="_PriceList", ThisKey="PriceListID", OtherKey="PriceListID", IsForeignKey=true)]
		public PriceList PriceList
		{
			get
			{
				return this._PriceList.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList.Entity;
				if (((previousValue != value) 
							|| (this._PriceList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList.Entity = null;
						previousValue.PriceListDetails.Remove(this);
					}
					this._PriceList.Entity = value;
					if ((value != null))
					{
						value.PriceListDetails.Add(this);
						this._PriceListID = value.PriceListID;
					}
					else
					{
						this._PriceListID = default(int);
					}
					this.SendPropertyChanged("PriceList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PriceListDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PriceListDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PriceListDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.PriceListDetail = this;
		}
		
		private void detach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.PriceListDetail = null;
		}
		
		private void attach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.PriceListDetail = this;
		}
		
		private void detach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.PriceListDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintInvoice")]
	public partial class PrintInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrintInvoiceID;
		
		private int _MyOrderID;
		
		private string _InvoiceNumber;
		
		private System.DateTime _InvoiceDate;
		
		private bool _Printed;
		
		private string _ResultMessage;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrintInvoiceIDChanging(int value);
    partial void OnPrintInvoiceIDChanged();
    partial void OnMyOrderIDChanging(int value);
    partial void OnMyOrderIDChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnPrintedChanging(bool value);
    partial void OnPrintedChanged();
    partial void OnResultMessageChanging(string value);
    partial void OnResultMessageChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public PrintInvoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintInvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrintInvoiceID
		{
			get
			{
				return this._PrintInvoiceID;
			}
			set
			{
				if ((this._PrintInvoiceID != value))
				{
					this.OnPrintInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._PrintInvoiceID = value;
					this.SendPropertyChanged("PrintInvoiceID");
					this.OnPrintInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int NOT NULL")]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					this.OnMyOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MyOrderID = value;
					this.SendPropertyChanged("MyOrderID");
					this.OnMyOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printed", DbType="Bit NOT NULL")]
		public bool Printed
		{
			get
			{
				return this._Printed;
			}
			set
			{
				if ((this._Printed != value))
				{
					this.OnPrintedChanging(value);
					this.SendPropertyChanging();
					this._Printed = value;
					this.SendPropertyChanged("Printed");
					this.OnPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultMessage", DbType="VarChar(250)")]
		public string ResultMessage
		{
			get
			{
				return this._ResultMessage;
			}
			set
			{
				if ((this._ResultMessage != value))
				{
					this.OnResultMessageChanging(value);
					this.SendPropertyChanging();
					this._ResultMessage = value;
					this.SendPropertyChanged("ResultMessage");
					this.OnResultMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _AppImageID;
		
		private System.Nullable<int> _ThumbAppImageID;
		
		private System.Nullable<decimal> _CostPrice;
		
		private decimal _Cost;
		
		private System.Nullable<bool> _CostShow;
		
		private int _Discount;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _CategoryTempID;
		
		private string _ExternalID;
		
		private string _Manufacturer;
		
		private string _Udm;
		
		private System.Nullable<int> _UnitMeasureId;
		
		private System.Nullable<int> _IvaType;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<CustomerVisitProduct> _CustomerVisitProducts;
		
		private EntitySet<MeterCategoryProduct> _MeterCategoryProducts;
		
		private EntitySet<MyOrderProduct> _MyOrderProducts;
		
		private EntitySet<PriceListDetail> _PriceListDetails;
		
		private EntityRef<AppImage> _AppImage;
		
		private EntityRef<AppImage> _AppImage1;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Category> _Category1;
		
		private EntityRef<UnitMeasure> _UnitMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAppImageIDChanging(System.Nullable<int> value);
    partial void OnAppImageIDChanged();
    partial void OnThumbAppImageIDChanging(System.Nullable<int> value);
    partial void OnThumbAppImageIDChanged();
    partial void OnCostPriceChanging(System.Nullable<decimal> value);
    partial void OnCostPriceChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnCostShowChanging(System.Nullable<bool> value);
    partial void OnCostShowChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryTempIDChanging(System.Nullable<int> value);
    partial void OnCategoryTempIDChanged();
    partial void OnExternalIDChanging(string value);
    partial void OnExternalIDChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnUdmChanging(string value);
    partial void OnUdmChanged();
    partial void OnUnitMeasureIdChanging(System.Nullable<int> value);
    partial void OnUnitMeasureIdChanged();
    partial void OnIvaTypeChanging(System.Nullable<int> value);
    partial void OnIvaTypeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Product()
		{
			this._CustomerVisitProducts = new EntitySet<CustomerVisitProduct>(new Action<CustomerVisitProduct>(this.attach_CustomerVisitProducts), new Action<CustomerVisitProduct>(this.detach_CustomerVisitProducts));
			this._MeterCategoryProducts = new EntitySet<MeterCategoryProduct>(new Action<MeterCategoryProduct>(this.attach_MeterCategoryProducts), new Action<MeterCategoryProduct>(this.detach_MeterCategoryProducts));
			this._MyOrderProducts = new EntitySet<MyOrderProduct>(new Action<MyOrderProduct>(this.attach_MyOrderProducts), new Action<MyOrderProduct>(this.detach_MyOrderProducts));
			this._PriceListDetails = new EntitySet<PriceListDetail>(new Action<PriceListDetail>(this.attach_PriceListDetails), new Action<PriceListDetail>(this.detach_PriceListDetails));
			this._AppImage = default(EntityRef<AppImage>);
			this._AppImage1 = default(EntityRef<AppImage>);
			this._Category = default(EntityRef<Category>);
			this._Category1 = default(EntityRef<Category>);
			this._UnitMeasure = default(EntityRef<UnitMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppImageID", DbType="Int")]
		public System.Nullable<int> AppImageID
		{
			get
			{
				return this._AppImageID;
			}
			set
			{
				if ((this._AppImageID != value))
				{
					if (this._AppImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._AppImageID = value;
					this.SendPropertyChanged("AppImageID");
					this.OnAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbAppImageID", DbType="Int")]
		public System.Nullable<int> ThumbAppImageID
		{
			get
			{
				return this._ThumbAppImageID;
			}
			set
			{
				if ((this._ThumbAppImageID != value))
				{
					if (this._AppImage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThumbAppImageIDChanging(value);
					this.SendPropertyChanging();
					this._ThumbAppImageID = value;
					this.SendPropertyChanged("ThumbAppImageID");
					this.OnThumbAppImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPrice", DbType="Money")]
		public System.Nullable<decimal> CostPrice
		{
			get
			{
				return this._CostPrice;
			}
			set
			{
				if ((this._CostPrice != value))
				{
					this.OnCostPriceChanging(value);
					this.SendPropertyChanging();
					this._CostPrice = value;
					this.SendPropertyChanged("CostPrice");
					this.OnCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostShow", DbType="Bit")]
		public System.Nullable<bool> CostShow
		{
			get
			{
				return this._CostShow;
			}
			set
			{
				if ((this._CostShow != value))
				{
					this.OnCostShowChanging(value);
					this.SendPropertyChanging();
					this._CostShow = value;
					this.SendPropertyChanged("CostShow");
					this.OnCostShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryTempID", DbType="Int")]
		public System.Nullable<int> CategoryTempID
		{
			get
			{
				return this._CategoryTempID;
			}
			set
			{
				if ((this._CategoryTempID != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryTempIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryTempID = value;
					this.SendPropertyChanged("CategoryTempID");
					this.OnCategoryTempIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="VarChar(50)")]
		public string ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Udm", DbType="VarChar(50)")]
		public string Udm
		{
			get
			{
				return this._Udm;
			}
			set
			{
				if ((this._Udm != value))
				{
					this.OnUdmChanging(value);
					this.SendPropertyChanging();
					this._Udm = value;
					this.SendPropertyChanged("Udm");
					this.OnUdmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureId", DbType="Int")]
		public System.Nullable<int> UnitMeasureId
		{
			get
			{
				return this._UnitMeasureId;
			}
			set
			{
				if ((this._UnitMeasureId != value))
				{
					if (this._UnitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitMeasureIdChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureId = value;
					this.SendPropertyChanged("UnitMeasureId");
					this.OnUnitMeasureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IvaType", DbType="Int")]
		public System.Nullable<int> IvaType
		{
			get
			{
				return this._IvaType;
			}
			set
			{
				if ((this._IvaType != value))
				{
					this.OnIvaTypeChanging(value);
					this.SendPropertyChanging();
					this._IvaType = value;
					this.SendPropertyChanged("IvaType");
					this.OnIvaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomerVisitProduct", Storage="_CustomerVisitProducts", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<CustomerVisitProduct> CustomerVisitProducts
		{
			get
			{
				return this._CustomerVisitProducts;
			}
			set
			{
				this._CustomerVisitProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MeterCategoryProduct", Storage="_MeterCategoryProducts", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<MeterCategoryProduct> MeterCategoryProducts
		{
			get
			{
				return this._MeterCategoryProducts;
			}
			set
			{
				this._MeterCategoryProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MyOrderProduct", Storage="_MyOrderProducts", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<MyOrderProduct> MyOrderProducts
		{
			get
			{
				return this._MyOrderProducts;
			}
			set
			{
				this._MyOrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PriceListDetail", Storage="_PriceListDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<PriceListDetail> PriceListDetails
		{
			get
			{
				return this._PriceListDetails;
			}
			set
			{
				this._PriceListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Product", Storage="_AppImage", ThisKey="AppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage
		{
			get
			{
				return this._AppImage.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage.Entity;
				if (((previousValue != value) 
							|| (this._AppImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._AppImage.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._AppImageID = value.AppImageID;
					}
					else
					{
						this._AppImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppImage_Product1", Storage="_AppImage1", ThisKey="ThumbAppImageID", OtherKey="AppImageID", IsForeignKey=true)]
		public AppImage AppImage1
		{
			get
			{
				return this._AppImage1.Entity;
			}
			set
			{
				AppImage previousValue = this._AppImage1.Entity;
				if (((previousValue != value) 
							|| (this._AppImage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppImage1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this._AppImage1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this._ThumbAppImageID = value.AppImageID;
					}
					else
					{
						this._ThumbAppImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppImage1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product1", Storage="_Category1", ThisKey="CategoryTempID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this._CategoryTempID = value.CategoryID;
					}
					else
					{
						this._CategoryTempID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product", Storage="_UnitMeasure", ThisKey="UnitMeasureId", OtherKey="UnitMeasureId", IsForeignKey=true)]
		public UnitMeasure UnitMeasure
		{
			get
			{
				return this._UnitMeasure.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._UnitMeasure.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._UnitMeasureId = value.UnitMeasureId;
					}
					else
					{
						this._UnitMeasureId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CustomerVisitProducts(CustomerVisitProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_MeterCategoryProducts(MeterCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_MeterCategoryProducts(MeterCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_MyOrderProducts(MyOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_PriceListDetails(PriceListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_PriceListDetails(PriceListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionID;
		
		private System.Nullable<int> _SellerID;
		
		private string _Name;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private string _Product;
		
		private string _Description;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _Status;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<BuyerPromotion> _BuyerPromotions;
		
		private EntitySet<MyOrder> _MyOrders;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionIDChanging(int value);
    partial void OnPromotionIDChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Promotion()
		{
			this._BuyerPromotions = new EntitySet<BuyerPromotion>(new Action<BuyerPromotion>(this.attach_BuyerPromotions), new Action<BuyerPromotion>(this.detach_BuyerPromotions));
			this._MyOrders = new EntitySet<MyOrder>(new Action<MyOrder>(this.attach_MyOrders), new Action<MyOrder>(this.detach_MyOrders));
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="VarChar(100)")]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_BuyerPromotion", Storage="_BuyerPromotions", ThisKey="PromotionID", OtherKey="PromotionID")]
		public EntitySet<BuyerPromotion> BuyerPromotions
		{
			get
			{
				return this._BuyerPromotions;
			}
			set
			{
				this._BuyerPromotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_MyOrder", Storage="_MyOrders", ThisKey="PromotionID", OtherKey="PromotionID")]
		public EntitySet<MyOrder> MyOrders
		{
			get
			{
				return this._MyOrders;
			}
			set
			{
				this._MyOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_Promotion", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.Promotions.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.Promotions.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuyerPromotions(BuyerPromotion entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_BuyerPromotions(BuyerPromotion entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
		
		private void attach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PromotionReading")]
	public partial class PromotionReading : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionReadingID;
		
		private System.Nullable<int> _BuyerID;
		
		private System.Nullable<int> _PromotionID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<BuyerPromotion> _BuyerPromotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionReadingIDChanging(int value);
    partial void OnPromotionReadingIDChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnPromotionIDChanging(System.Nullable<int> value);
    partial void OnPromotionIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public PromotionReading()
		{
			this._BuyerPromotion = default(EntityRef<BuyerPromotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionReadingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromotionReadingID
		{
			get
			{
				return this._PromotionReadingID;
			}
			set
			{
				if ((this._PromotionReadingID != value))
				{
					this.OnPromotionReadingIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionReadingID = value;
					this.SendPropertyChanged("PromotionReadingID");
					this.OnPromotionReadingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._BuyerPromotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					if (this._BuyerPromotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuyerPromotion_PromotionReading", Storage="_BuyerPromotion", ThisKey="BuyerID,PromotionID", OtherKey="BuyerID,PromotionID", IsForeignKey=true)]
		public BuyerPromotion BuyerPromotion
		{
			get
			{
				return this._BuyerPromotion.Entity;
			}
			set
			{
				BuyerPromotion previousValue = this._BuyerPromotion.Entity;
				if (((previousValue != value) 
							|| (this._BuyerPromotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuyerPromotion.Entity = null;
						previousValue.PromotionReadings.Remove(this);
					}
					this._BuyerPromotion.Entity = value;
					if ((value != null))
					{
						value.PromotionReadings.Add(this);
						this._BuyerID = value.BuyerID;
						this._PromotionID = value.PromotionID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
						this._PromotionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BuyerPromotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Segment")]
	public partial class Segment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SegmentID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<CustomerVisit> _CustomerVisits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Segment()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._CustomerVisits = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisits), new Action<CustomerVisit>(this.detach_CustomerVisits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_Customer", Storage="_Customers", ThisKey="SegmentID", OtherKey="SegmentID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_CustomerVisit", Storage="_CustomerVisits", ThisKey="SegmentID", OtherKey="SegmentID")]
		public EntitySet<CustomerVisit> CustomerVisits
		{
			get
			{
				return this._CustomerVisits;
			}
			set
			{
				this._CustomerVisits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
		
		private void attach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seller")]
	public partial class Seller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SellerID;
		
		private bool _IsBlocked;
		
		private bool _IsAdmin;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<BuyerSeller> _BuyerSellers;
		
		private EntitySet<CodeLink> _CodeLinks;
		
		private EntitySet<CustomerVisit> _CustomerVisits;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntitySet<Promotion> _Promotions;
		
		private EntitySet<SellerDevice> _SellerDevices;
		
		private EntitySet<SellerTrackPoint> _SellerTrackPoints;
		
		private EntitySet<SellerWorkingDay> _SellerWorkingDays;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Seller()
		{
			this._BuyerSellers = new EntitySet<BuyerSeller>(new Action<BuyerSeller>(this.attach_BuyerSellers), new Action<BuyerSeller>(this.detach_BuyerSellers));
			this._CodeLinks = new EntitySet<CodeLink>(new Action<CodeLink>(this.attach_CodeLinks), new Action<CodeLink>(this.detach_CodeLinks));
			this._CustomerVisits = new EntitySet<CustomerVisit>(new Action<CustomerVisit>(this.attach_CustomerVisits), new Action<CustomerVisit>(this.detach_CustomerVisits));
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._Promotions = new EntitySet<Promotion>(new Action<Promotion>(this.attach_Promotions), new Action<Promotion>(this.detach_Promotions));
			this._SellerDevices = new EntitySet<SellerDevice>(new Action<SellerDevice>(this.attach_SellerDevices), new Action<SellerDevice>(this.detach_SellerDevices));
			this._SellerTrackPoints = new EntitySet<SellerTrackPoint>(new Action<SellerTrackPoint>(this.attach_SellerTrackPoints), new Action<SellerTrackPoint>(this.detach_SellerTrackPoints));
			this._SellerWorkingDays = new EntitySet<SellerWorkingDay>(new Action<SellerWorkingDay>(this.attach_SellerWorkingDays), new Action<SellerWorkingDay>(this.detach_SellerWorkingDays));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_BuyerSeller", Storage="_BuyerSellers", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<BuyerSeller> BuyerSellers
		{
			get
			{
				return this._BuyerSellers;
			}
			set
			{
				this._BuyerSellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_CodeLink", Storage="_CodeLinks", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<CodeLink> CodeLinks
		{
			get
			{
				return this._CodeLinks;
			}
			set
			{
				this._CodeLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_CustomerVisit", Storage="_CustomerVisits", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<CustomerVisit> CustomerVisits
		{
			get
			{
				return this._CustomerVisits;
			}
			set
			{
				this._CustomerVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_Promotion", Storage="_Promotions", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<Promotion> Promotions
		{
			get
			{
				return this._Promotions;
			}
			set
			{
				this._Promotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerDevice", Storage="_SellerDevices", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<SellerDevice> SellerDevices
		{
			get
			{
				return this._SellerDevices;
			}
			set
			{
				this._SellerDevices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerTrackPoint", Storage="_SellerTrackPoints", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<SellerTrackPoint> SellerTrackPoints
		{
			get
			{
				return this._SellerTrackPoints;
			}
			set
			{
				this._SellerTrackPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerWorkingDay", Storage="_SellerWorkingDays", ThisKey="SellerID", OtherKey="SellerID")]
		public EntitySet<SellerWorkingDay> SellerWorkingDays
		{
			get
			{
				return this._SellerWorkingDays;
			}
			set
			{
				this._SellerWorkingDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_UserRole", Storage="_UserRoles", ThisKey="SellerID", OtherKey="SellerId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Seller", Storage="_Employee", ThisKey="SellerID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Seller = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Seller = this;
						this._SellerID = value.EmployeeID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BuyerSellers(BuyerSeller entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_BuyerSellers(BuyerSeller entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_CodeLinks(CodeLink entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_CodeLinks(CodeLink entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_CustomerVisits(CustomerVisit entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_Promotions(Promotion entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_Promotions(Promotion entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_SellerDevices(SellerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_SellerDevices(SellerDevice entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_SellerTrackPoints(SellerTrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_SellerTrackPoints(SellerTrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_SellerWorkingDays(SellerWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_SellerWorkingDays(SellerWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellerDevice")]
	public partial class SellerDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SellerID;
		
		private int _DeviceID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Device> _Device;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SellerDevice()
		{
			this._Device = default(EntityRef<Device>);
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_SellerDevice", Storage="_Device", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.SellerDevices.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.SellerDevices.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(int);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerDevice", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.SellerDevices.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.SellerDevices.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellerTrackPoint")]
	public partial class SellerTrackPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SellerID;
		
		private int _TrackPointID;
		
		private EntityRef<Seller> _Seller;
		
		private EntityRef<TrackPoint> _TrackPoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnTrackPointIDChanging(int value);
    partial void OnTrackPointIDChanged();
    #endregion
		
		public SellerTrackPoint()
		{
			this._Seller = default(EntityRef<Seller>);
			this._TrackPoint = default(EntityRef<TrackPoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TrackPointID
		{
			get
			{
				return this._TrackPointID;
			}
			set
			{
				if ((this._TrackPointID != value))
				{
					if (this._TrackPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackPointIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointID = value;
					this.SendPropertyChanged("TrackPointID");
					this.OnTrackPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerTrackPoint", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.SellerTrackPoints.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.SellerTrackPoints.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_SellerTrackPoint", Storage="_TrackPoint", ThisKey="TrackPointID", OtherKey="TrackPointID", IsForeignKey=true)]
		public TrackPoint TrackPoint
		{
			get
			{
				return this._TrackPoint.Entity;
			}
			set
			{
				TrackPoint previousValue = this._TrackPoint.Entity;
				if (((previousValue != value) 
							|| (this._TrackPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackPoint.Entity = null;
						previousValue.SellerTrackPoints.Remove(this);
					}
					this._TrackPoint.Entity = value;
					if ((value != null))
					{
						value.SellerTrackPoints.Add(this);
						this._TrackPointID = value.TrackPointID;
					}
					else
					{
						this._TrackPointID = default(int);
					}
					this.SendPropertyChanged("TrackPoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellerWorkingDay")]
	public partial class SellerWorkingDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SellerWorkingDayID;
		
		private int _SellerID;
		
		private int _TrackPointID;
		
		private int _Type;
		
		private System.DateTime _WorkingDayDate;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntityRef<Seller> _Seller;
		
		private EntityRef<TrackPoint> _TrackPoint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerWorkingDayIDChanging(int value);
    partial void OnSellerWorkingDayIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnTrackPointIDChanging(int value);
    partial void OnTrackPointIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnWorkingDayDateChanging(System.DateTime value);
    partial void OnWorkingDayDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public SellerWorkingDay()
		{
			this._Seller = default(EntityRef<Seller>);
			this._TrackPoint = default(EntityRef<TrackPoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerWorkingDayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SellerWorkingDayID
		{
			get
			{
				return this._SellerWorkingDayID;
			}
			set
			{
				if ((this._SellerWorkingDayID != value))
				{
					this.OnSellerWorkingDayIDChanging(value);
					this.SendPropertyChanging();
					this._SellerWorkingDayID = value;
					this.SendPropertyChanged("SellerWorkingDayID");
					this.OnSellerWorkingDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointID", DbType="Int NOT NULL")]
		public int TrackPointID
		{
			get
			{
				return this._TrackPointID;
			}
			set
			{
				if ((this._TrackPointID != value))
				{
					if (this._TrackPoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackPointIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointID = value;
					this.SendPropertyChanged("TrackPointID");
					this.OnTrackPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingDayDate", DbType="DateTime NOT NULL")]
		public System.DateTime WorkingDayDate
		{
			get
			{
				return this._WorkingDayDate;
			}
			set
			{
				if ((this._WorkingDayDate != value))
				{
					this.OnWorkingDayDateChanging(value);
					this.SendPropertyChanging();
					this._WorkingDayDate = value;
					this.SendPropertyChanged("WorkingDayDate");
					this.OnWorkingDayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_SellerWorkingDay", Storage="_Seller", ThisKey="SellerID", OtherKey="SellerID", IsForeignKey=true)]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.SellerWorkingDays.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.SellerWorkingDays.Add(this);
						this._SellerID = value.SellerID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_SellerWorkingDay", Storage="_TrackPoint", ThisKey="TrackPointID", OtherKey="TrackPointID", IsForeignKey=true)]
		public TrackPoint TrackPoint
		{
			get
			{
				return this._TrackPoint.Entity;
			}
			set
			{
				TrackPoint previousValue = this._TrackPoint.Entity;
				if (((previousValue != value) 
							|| (this._TrackPoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackPoint.Entity = null;
						previousValue.SellerWorkingDays.Remove(this);
					}
					this._TrackPoint.Entity = value;
					if ((value != null))
					{
						value.SellerWorkingDays.Add(this);
						this._TrackPointID = value.TrackPointID;
					}
					else
					{
						this._TrackPointID = default(int);
					}
					this.SendPropertyChanged("TrackPoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingCostRule")]
	public partial class ShippingCostRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShippingCostRuleId;
		
		private System.Nullable<decimal> _Value;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingCostRuleIdChanging(int value);
    partial void OnShippingCostRuleIdChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ShippingCostRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCostRuleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShippingCostRuleId
		{
			get
			{
				return this._ShippingCostRuleId;
			}
			set
			{
				if ((this._ShippingCostRuleId != value))
				{
					this.OnShippingCostRuleIdChanging(value);
					this.SendPropertyChanging();
					this._ShippingCostRuleId = value;
					this.SendPropertyChanged("ShippingCostRuleId");
					this.OnShippingCostRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _Name;
		
		private string _CNPJ;
		
		private string _PhoneNumber;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<bool> _IsPay;
		
		private string _SerialKey;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<MyOrder> _MyOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCNPJChanging(string value);
    partial void OnCNPJChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnIsPayChanging(System.Nullable<bool> value);
    partial void OnIsPayChanged();
    partial void OnSerialKeyChanging(string value);
    partial void OnSerialKeyChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Supplier()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._MyOrders = new EntitySet<MyOrder>(new Action<MyOrder>(this.attach_MyOrders), new Action<MyOrder>(this.detach_MyOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="VarChar(50)")]
		public string CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this.OnCNPJChanging(value);
					this.SendPropertyChanging();
					this._CNPJ = value;
					this.SendPropertyChanged("CNPJ");
					this.OnCNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPay", DbType="Bit")]
		public System.Nullable<bool> IsPay
		{
			get
			{
				return this._IsPay;
			}
			set
			{
				if ((this._IsPay != value))
				{
					this.OnIsPayChanging(value);
					this.SendPropertyChanging();
					this._IsPay = value;
					this.SendPropertyChanged("IsPay");
					this.OnIsPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialKey", DbType="VarChar(150)")]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Category", Storage="_Categories", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Employee", Storage="_Employees", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_MyOrder", Storage="_MyOrders", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<MyOrder> MyOrders
		{
			get
			{
				return this._MyOrders;
			}
			set
			{
				this._MyOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_MyOrders(MyOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackPoint")]
	public partial class TrackPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrackPointID;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private int _TrackPointTypeID;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _DateGPS;
		
		private EntitySet<MyOrderHistory> _MyOrderHistories;
		
		private EntitySet<SellerTrackPoint> _SellerTrackPoints;
		
		private EntitySet<SellerWorkingDay> _SellerWorkingDays;
		
		private EntityRef<TrackPointType> _TrackPointType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackPointIDChanging(int value);
    partial void OnTrackPointIDChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnTrackPointTypeIDChanging(int value);
    partial void OnTrackPointTypeIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDateGPSChanging(System.Nullable<System.DateTime> value);
    partial void OnDateGPSChanged();
    #endregion
		
		public TrackPoint()
		{
			this._MyOrderHistories = new EntitySet<MyOrderHistory>(new Action<MyOrderHistory>(this.attach_MyOrderHistories), new Action<MyOrderHistory>(this.detach_MyOrderHistories));
			this._SellerTrackPoints = new EntitySet<SellerTrackPoint>(new Action<SellerTrackPoint>(this.attach_SellerTrackPoints), new Action<SellerTrackPoint>(this.detach_SellerTrackPoints));
			this._SellerWorkingDays = new EntitySet<SellerWorkingDay>(new Action<SellerWorkingDay>(this.attach_SellerWorkingDays), new Action<SellerWorkingDay>(this.detach_SellerWorkingDays));
			this._TrackPointType = default(EntityRef<TrackPointType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrackPointID
		{
			get
			{
				return this._TrackPointID;
			}
			set
			{
				if ((this._TrackPointID != value))
				{
					this.OnTrackPointIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointID = value;
					this.SendPropertyChanged("TrackPointID");
					this.OnTrackPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointTypeID", DbType="Int NOT NULL")]
		public int TrackPointTypeID
		{
			get
			{
				return this._TrackPointTypeID;
			}
			set
			{
				if ((this._TrackPointTypeID != value))
				{
					if (this._TrackPointType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackPointTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointTypeID = value;
					this.SendPropertyChanged("TrackPointTypeID");
					this.OnTrackPointTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGPS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGPS
		{
			get
			{
				return this._DateGPS;
			}
			set
			{
				if ((this._DateGPS != value))
				{
					this.OnDateGPSChanging(value);
					this.SendPropertyChanging();
					this._DateGPS = value;
					this.SendPropertyChanged("DateGPS");
					this.OnDateGPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_MyOrderHistory", Storage="_MyOrderHistories", ThisKey="TrackPointID", OtherKey="TrackPointID")]
		public EntitySet<MyOrderHistory> MyOrderHistories
		{
			get
			{
				return this._MyOrderHistories;
			}
			set
			{
				this._MyOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_SellerTrackPoint", Storage="_SellerTrackPoints", ThisKey="TrackPointID", OtherKey="TrackPointID")]
		public EntitySet<SellerTrackPoint> SellerTrackPoints
		{
			get
			{
				return this._SellerTrackPoints;
			}
			set
			{
				this._SellerTrackPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPoint_SellerWorkingDay", Storage="_SellerWorkingDays", ThisKey="TrackPointID", OtherKey="TrackPointID")]
		public EntitySet<SellerWorkingDay> SellerWorkingDays
		{
			get
			{
				return this._SellerWorkingDays;
			}
			set
			{
				this._SellerWorkingDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPointType_TrackPoint", Storage="_TrackPointType", ThisKey="TrackPointTypeID", OtherKey="TrackPointTypeID", IsForeignKey=true)]
		public TrackPointType TrackPointType
		{
			get
			{
				return this._TrackPointType.Entity;
			}
			set
			{
				TrackPointType previousValue = this._TrackPointType.Entity;
				if (((previousValue != value) 
							|| (this._TrackPointType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackPointType.Entity = null;
						previousValue.TrackPoints.Remove(this);
					}
					this._TrackPointType.Entity = value;
					if ((value != null))
					{
						value.TrackPoints.Add(this);
						this._TrackPointTypeID = value.TrackPointTypeID;
					}
					else
					{
						this._TrackPointTypeID = default(int);
					}
					this.SendPropertyChanged("TrackPointType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = this;
		}
		
		private void detach_MyOrderHistories(MyOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = null;
		}
		
		private void attach_SellerTrackPoints(SellerTrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = this;
		}
		
		private void detach_SellerTrackPoints(SellerTrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = null;
		}
		
		private void attach_SellerWorkingDays(SellerWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = this;
		}
		
		private void detach_SellerWorkingDays(SellerWorkingDay entity)
		{
			this.SendPropertyChanging();
			entity.TrackPoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackPointType")]
	public partial class TrackPointType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrackPointTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<TrackPoint> _TrackPoints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackPointTypeIDChanging(int value);
    partial void OnTrackPointTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public TrackPointType()
		{
			this._TrackPoints = new EntitySet<TrackPoint>(new Action<TrackPoint>(this.attach_TrackPoints), new Action<TrackPoint>(this.detach_TrackPoints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPointTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TrackPointTypeID
		{
			get
			{
				return this._TrackPointTypeID;
			}
			set
			{
				if ((this._TrackPointTypeID != value))
				{
					this.OnTrackPointTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TrackPointTypeID = value;
					this.SendPropertyChanged("TrackPointTypeID");
					this.OnTrackPointTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackPointType_TrackPoint", Storage="_TrackPoints", ThisKey="TrackPointTypeID", OtherKey="TrackPointTypeID")]
		public EntitySet<TrackPoint> TrackPoints
		{
			get
			{
				return this._TrackPoints;
			}
			set
			{
				this._TrackPoints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrackPoints(TrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.TrackPointType = this;
		}
		
		private void detach_TrackPoints(TrackPoint entity)
		{
			this.SendPropertyChanging();
			entity.TrackPointType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Version")]
	public partial class Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private System.Nullable<int> _OS;
		
		private int _Version1;
		
		private System.Nullable<int> _Status;
		
		private bool _Active;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _EmployeeID;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnOSChanging(System.Nullable<int> value);
    partial void OnOSChanged();
    partial void OnVersion1Changing(int value);
    partial void OnVersion1Changed();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public Version()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS", DbType="Int")]
		public System.Nullable<int> OS
		{
			get
			{
				return this._OS;
			}
			set
			{
				if ((this._OS != value))
				{
					this.OnOSChanging(value);
					this.SendPropertyChanging();
					this._OS = value;
					this.SendPropertyChanged("OS");
					this.OnOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Version", Storage="_Version1", DbType="Int NOT NULL")]
		public int Version1
		{
			get
			{
				return this._Version1;
			}
			set
			{
				if ((this._Version1 != value))
				{
					this.OnVersion1Changing(value);
					this.SendPropertyChanging();
					this._Version1 = value;
					this.SendPropertyChanged("Version1");
					this.OnVersion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Version", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Versions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Versions.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierRecommendation")]
	public partial class SupplierRecommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierRecommendationID;
		
		private string _Identification;
		
		private string _SerialKey;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Company;
		
		private System.Nullable<int> _SegmentID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierRecommendationIDChanging(int value);
    partial void OnSupplierRecommendationIDChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    partial void OnSerialKeyChanging(string value);
    partial void OnSerialKeyChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnSegmentIDChanging(System.Nullable<int> value);
    partial void OnSegmentIDChanged();
    #endregion
		
		public SupplierRecommendation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierRecommendationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierRecommendationID
		{
			get
			{
				return this._SupplierRecommendationID;
			}
			set
			{
				if ((this._SupplierRecommendationID != value))
				{
					this.OnSupplierRecommendationIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierRecommendationID = value;
					this.SendPropertyChanged("SupplierRecommendationID");
					this.OnSupplierRecommendationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="VarChar(150)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialKey", DbType="VarChar(150)")]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int")]
		public System.Nullable<int> SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private bool _Active;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(60)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleID", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SellerId;
		
		private int _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Seller> _Seller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSellerIdChanging(int value);
    partial void OnSellerIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Seller = default(EntityRef<Seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SellerId
		{
			get
			{
				return this._SellerId;
			}
			set
			{
				if ((this._SellerId != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIdChanging(value);
					this.SendPropertyChanging();
					this._SellerId = value;
					this.SendPropertyChanged("SellerId");
					this.OnSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.RoleID;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seller_UserRole", Storage="_Seller", ThisKey="SellerId", OtherKey="SellerID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Seller Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Seller previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._SellerId = value.SellerID;
					}
					else
					{
						this._SellerId = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillID;
		
		private System.Nullable<int> _CustomerID;
		
		private string _ProductName;
		
		private decimal _Value;
		
		private string _Obs;
		
		private System.Nullable<bool> _Paid;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIDChanging(int value);
    partial void OnBillIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnObsChanging(string value);
    partial void OnObsChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    #endregion
		
		public Bill()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(80)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Money NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obs", DbType="VarChar(250)")]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this.OnObsChanging(value);
					this.SendPropertyChanging();
					this._Obs = value;
					this.SendPropertyChanged("Obs");
					this.OnObsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spLastSellerLocationResult
	{
		
		private int _SellerID;
		
		private string _Name;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private System.Nullable<System.DateTime> _DateGPS;
		
		private System.DateTime _DateCreated;
		
		public spLastSellerLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this._SellerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(101)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGPS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGPS
		{
			get
			{
				return this._DateGPS;
			}
			set
			{
				if ((this._DateGPS != value))
				{
					this._DateGPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
	
	public partial class spListTodayTravelPointResult
	{
		
		private int _SellerID;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _DateGPS;
		
		public spListTodayTravelPointResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this._SellerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGPS", DbType="VarChar(16)")]
		public string DateGPS
		{
			get
			{
				return this._DateGPS;
			}
			set
			{
				if ((this._DateGPS != value))
				{
					this._DateGPS = value;
				}
			}
		}
	}
	
	public partial class spLastSellerAliveResult
	{
		
		private int _SellerID;
		
		private string _Name;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private System.Nullable<System.DateTime> _DateGPS;
		
		private System.DateTime _DateCreated;
		
		public spLastSellerAliveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this._SellerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(101)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGPS", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateGPS
		{
			get
			{
				return this._DateGPS;
			}
			set
			{
				if ((this._DateGPS != value))
				{
					this._DateGPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
	}
	
	public partial class spAdminOrderListResult
	{
		
		private string _Address;
		
		private System.Nullable<int> _Number;
		
		private string _CustomerName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private int _MyOrderID;
		
		private string _ReceiptCode;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _MyOrderType;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _SellerFirstName;
		
		private string _SellerLastName;
		
		public spAdminOrderListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int NOT NULL")]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					this._MyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptCode", DbType="VarChar(50)")]
		public string ReceiptCode
		{
			get
			{
				return this._ReceiptCode;
			}
			set
			{
				if ((this._ReceiptCode != value))
				{
					this._ReceiptCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderType", DbType="Int")]
		public System.Nullable<int> MyOrderType
		{
			get
			{
				return this._MyOrderType;
			}
			set
			{
				if ((this._MyOrderType != value))
				{
					this._MyOrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerFirstName", DbType="VarChar(50)")]
		public string SellerFirstName
		{
			get
			{
				return this._SellerFirstName;
			}
			set
			{
				if ((this._SellerFirstName != value))
				{
					this._SellerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerLastName", DbType="VarChar(50)")]
		public string SellerLastName
		{
			get
			{
				return this._SellerLastName;
			}
			set
			{
				if ((this._SellerLastName != value))
				{
					this._SellerLastName = value;
				}
			}
		}
	}
	
	public partial class spDealerOrderListResult
	{
		
		private string _Address;
		
		private System.Nullable<int> _Number;
		
		private string _CustomerName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private int _MyOrderID;
		
		private string _ReceiptCode;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _MyOrderType;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _SellerFirstName;
		
		private string _SellerLastName;
		
		public spDealerOrderListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int NOT NULL")]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					this._MyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptCode", DbType="VarChar(50)")]
		public string ReceiptCode
		{
			get
			{
				return this._ReceiptCode;
			}
			set
			{
				if ((this._ReceiptCode != value))
				{
					this._ReceiptCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderType", DbType="Int")]
		public System.Nullable<int> MyOrderType
		{
			get
			{
				return this._MyOrderType;
			}
			set
			{
				if ((this._MyOrderType != value))
				{
					this._MyOrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerFirstName", DbType="VarChar(50)")]
		public string SellerFirstName
		{
			get
			{
				return this._SellerFirstName;
			}
			set
			{
				if ((this._SellerFirstName != value))
				{
					this._SellerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerLastName", DbType="VarChar(50)")]
		public string SellerLastName
		{
			get
			{
				return this._SellerLastName;
			}
			set
			{
				if ((this._SellerLastName != value))
				{
					this._SellerLastName = value;
				}
			}
		}
	}
	
	public partial class spSellerOrderListResult
	{
		
		private string _Address;
		
		private System.Nullable<int> _Number;
		
		private string _CustomerName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private int _MyOrderID;
		
		private string _ReceiptCode;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _MyOrderType;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _SellerFirstName;
		
		private string _SellerLastName;
		
		private string _DealerFirstName;
		
		private string _DealerLastName;
		
		public spSellerOrderListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderID", DbType="Int NOT NULL")]
		public int MyOrderID
		{
			get
			{
				return this._MyOrderID;
			}
			set
			{
				if ((this._MyOrderID != value))
				{
					this._MyOrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptCode", DbType="VarChar(50)")]
		public string ReceiptCode
		{
			get
			{
				return this._ReceiptCode;
			}
			set
			{
				if ((this._ReceiptCode != value))
				{
					this._ReceiptCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyOrderType", DbType="Int")]
		public System.Nullable<int> MyOrderType
		{
			get
			{
				return this._MyOrderType;
			}
			set
			{
				if ((this._MyOrderType != value))
				{
					this._MyOrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerFirstName", DbType="VarChar(50)")]
		public string SellerFirstName
		{
			get
			{
				return this._SellerFirstName;
			}
			set
			{
				if ((this._SellerFirstName != value))
				{
					this._SellerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerLastName", DbType="VarChar(50)")]
		public string SellerLastName
		{
			get
			{
				return this._SellerLastName;
			}
			set
			{
				if ((this._SellerLastName != value))
				{
					this._SellerLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerFirstName", DbType="VarChar(50)")]
		public string DealerFirstName
		{
			get
			{
				return this._DealerFirstName;
			}
			set
			{
				if ((this._DealerFirstName != value))
				{
					this._DealerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerLastName", DbType="VarChar(50)")]
		public string DealerLastName
		{
			get
			{
				return this._DealerLastName;
			}
			set
			{
				if ((this._DealerLastName != value))
				{
					this._DealerLastName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
